{"version":3,"sources":["Components/PageDetails/Headers/codestone logo.png","Components/PageDetails/Pictures/balloons.png","Components/codestone logo.png","Components/PageDetails/Headers/Header.js","Components/PageDetails/LoginForm/LoginForm.js","Components/Pages/LoginPage.js","Components/Pages/RegisterPage.js","Components/PageDetails/ConfirmRegisterForm/ConfirmRegisterForm.js","Components/Pages/ConfirmRegisterPage.js","Components/PageDetails/ResetPasswordForm/ResetPasswordForm.js","Components/Pages/ResetPasswordPage.js","Components/PageDetails/Headers/NavBarUsers.js","Components/PageDetails/Buttons/LogOutButton/LogOutButton.js","Components/PageDetails/Buttons/ProfileButton/ProfileButton.js","Components/PageDetails/Buttons/AdminButton/AdminButton.js","Components/PageDetails/CompletedAssessments/CompletedAssessments.js","Components/Pages/HomePage.js","Components/PageDetails/DisplayQuestions/DisplayQuestions.js","Components/Pages/UserQuestionsPage.js","Components/Pages/ConfirmEmail.js","Components/PageDetails/ConfirmResetPasswordForm/ConfirmResetPasswordForm.js","Components/Pages/ConfirmPasswordPage.js","Components/PageDetails/UpdateProfileForm/UpdateAccountDetailsForm.js","Components/PageDetails/UpdateProfileForm/DislplayUserAccountDetails.js","Components/PageDetails/UpdateProfileForm/UpdatePasswordForm.js","Components/PageDetails/UpdateProfileForm/DisplayUserPasswordDetails.js","Components/Pages/ProfilePage.js","Components/PageDetails/UpdateProfileForm/UpdateUserWorkStationDetailsForm.js","Components/PageDetails/UpdateProfileForm/DisplayUserWorkStationDetails.js","Components/Pages/DisplayWorkStationMangmentPage.js","Components/PageDetails/DisplayQuestions/DisplayHistory.js","Components/Pages/History.js","Components/AdminComponents/AdminDisplayQuestions/AdminAddQuestion.js","Components/AdminComponents/AdminDisplayQuestions/AdminDisplayQuestions.js","Components/Pages/AdminCenter.js","Components/Pages/AdminCenterViewUsers.js","Components/AdminComponents/AdminDisplayWorkstations/AdminViewWorkstationDetails.js","Components/AdminComponents/AdminDisplayQuestions/AdminViewWorkStations.js","Components/Pages/AdminViewWorkStationAssessmentsPage.js","Components/AdminComponents/AdminDisplayQuestions/AdminViewWorkStationsDeclined.js","Components/Pages/AdminViewWorkStationAssessmentsDeclinedPage.js","Components/Pages/CompletedAssessmentLandingPage.js","Components/Pages/AdminViewFullUserWSAResponses.js","Components/DisplayUsersHS.js","Components/DisplayUsersMS.js","Components/DisplayUsersCS.js","AdminComponents/AdminViewUsersSeverityCompleted.js","Components/DisplayUsers.js","AdminComponents/AdminViewUsers.js","Routing/AuthRoute.js","App.js","serviceWorker.js","index.js","codestone logo.png"],"names":["module","exports","Header","className","alt","src","logo","width","height","LoginForm","state","email","password","onSubmit","handleSubmit","bind","e","preventDefault","window","localStorage","getItem","this","length","alert","today","Date","date","getUTCFullYear","getUTCMonth","getUTCDate","getHours","getMinutes","getSeconds","getMilliseconds","data","console","log","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","adminJwt","jwt","user","AccountValidationMessage","removeItem","setItem","location","href","catch","error","class","action","initialValues","values","setSubmitting","setTimeout","validationSchema","Yup","shape","required","matches","min","props","touched","errors","handleChange","handleBlur","htmlFor","name","type","placeholder","value1","value","onInput","onChange","setState","target","onBlur","value2","style","onClick","to","React","Component","LoginPage","Register","ConfirmRegisterForm","users","contactNumber","passwordConfirm","oneOf","ResetPasswordForm","EmailAvailability","trigger","ResetPasswordPage","NavBarUsers","LogoutButton","LogOut","ProfileButton","AdminButton","moment","locale","navigator","language","results","AdminWorkstations","handleClick","event","currentPage","Number","id","questions","viewDetails","todosPerPage","pageNumbers","FullDetailsPageToken","getQuestionByUniqueDate","pageNumber","activePage","recordset","i","find","q","AssignedWorkStation","push","amountOfWorkstations","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","Math","ceil","map","r","index","workStation","AssignedWorkstation","completeToken","QuestionStatus","RUId","WSAId","userSelect","cursor","number","key","textAlign","Questions","questionsAccepted","questionsAcceptedCounter","selectedSet","ViewActivityToken","noteToBeAdded","notesFromDB","addNoteToken","answeredQuestions","ViewActivity","float","format","item","backgroundColor","border","borderWidth","CreationTime","UserStatus","Notes","AddNoteBtn","pathname","QuestionWhenAnswered","QuestionResponse","Accepted","ModalCompletedQuestions","handleClose","handleShow","handleRefresh","show","show1","reload","Modal","size","onHide","animation","question","padding","LogOutButton","Home","CompletedAssessments","questionCounter","DisplayQuestions","QuestionsAnswer","workstations","selectedWorkStation","QuestionAndAnswer","submitAnswers","getItems","WorkStations","getWorkStations","selectedWorkstation","declinedCounter","answer","DropdownButton","title","color","borderColor","WorkStationSelecter","selectWorkStation","Dropdown","Item","QuestionAnswer","QuestionAccepted","problem","problemDefinition","completedQuestions","soloutionForDeclinedQuestion","QuestionDecline","QuestionOnChange","OnCommit","RevertAcceptedAnswer","AdmitProblem","AdmitNotProblem","QuestionProblem","SubmitProblemSoloution","submitDeclinedQuestionSoloution","AcceptAnswer","newItem","Question","questionId","QuestionId","suggestedSoloution","QuestionComplete","questionProblem","problemSubmitted","declineSubmitted","ShowInput","splice","findIndex","User","WorkStation","position","GuidanceNotes","textDecoration","marginLeft","marginRight","verticalAlign","confirmedUser","ConfirmResetPasswordForm","RegisterForm","currentEmail","DisplayUserAcountDetails","AccountDetails","disabled","Email","NameOfUser","ContactNumber","UpdateAccountDetails","closeButton","Body","UpdateAccountDetailsForm","LastPasswordUpdate","DisplayAddWorkstation","ProfilePage","DisplayUserPasswordDetails","AddWorkstation","Location","ExtraInformation","PrimaryWorkStation","ref","c","textarea","rows","defaultValue","ManageWorkstations","exist","deleteWorkStation","UDId","DateAdded","DisplayUserWorkStationDetails","DeskLocation","DisplayHistory","AddQuestion","GuidanceNote","QuestionsSeverity","QuestionID","QuestionSeverity","refresh","QuestionUpdate","GuidanceNotesUpdate","deleteToken","confirmDeleteToken","guidanceNote","DisplayAddQuestion","DisplayDeleteConfirmation","DeleteQuestionAndGuidanceNotes","paddingLeft","paddingRight","EditQuestionModal","EditQuestion","previousQuestion","previousGuidanceNote","AdminDisplayQuestions","DisplayUsers","LastLogin","AdminViewWorkstations","LandingPage","WSAHeader","getWSAAnsweredQuestions","getWSAHeader","amountOfQuestions","WSAAnsweredQuestions","viewMoreToken","Id","questionWhenAnswered","questionResponse","SuggestedSoloution","ResponseId","DisplayWSAHeader","header","paddingBottom","DisplayWSAAnsweredQuestions","viewFullDetailsToken","WSAResponses","ViewCompletedResponsesToken","submitNote","responseId","seenStatus","background","Response","AcceptSolutionModal","acceptSoloution","severity","description","Navigation","SeveritySelector","role","aria-label","token","adminToken","AuthRoute","component","rest","render","undefined","AdminAuthRoute","resetToken","ResetAuthRoute","Routing","exact","path","ResetPassword","ConfirmEmail","ConfirmRegisterPage","ConfirmPassword","AdminViewFullUserWSAResponses","CompletedAssessmentLandingPage","AdminCenterViewUsers","DisplayWorkStationMangmentPage","AdminCenter","UserQuestions","History","AdminViewUsers","AdminViewWorkStationAssessmentsPage","AdminViewWorkStationAssessmentsDeclinedPage","App","Boolean","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.de774988.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/codestone logo.187518e5.png\";","module.exports = __webpack_public_path__ + \"static/media/balloons.9bbb0d55.png\";","module.exports = __webpack_public_path__ + \"static/media/codestone logo.187518e5.png\";","import React from \"react\";\r\nimport logo from \"./codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./bootstrap.min.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      {/* <Link to=\"/home\">\r\n        <button className=\"btn btn-secondary\"> Home</button>\r\n      </Link> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\"\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let User = window.localStorage.getItem(\"User\");\r\n\r\n    if (this.state.email.length < 8 || this.state.password.length < 8) {\r\n      alert(`please enter the form correctly `);\r\n    } else {\r\n      var today = new Date(),\r\n        date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n          1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n      const data = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        date\r\n      };\r\n      console.log(date);\r\n\r\n      fetch(\"/login\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json,\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(response => {\r\n          console.log(\"response before it is broken down \" + response);\r\n\r\n          return response.json();\r\n        })\r\n        .then(({ adminJwt, jwt, user, AccountValidationMessage }) => {\r\n          console.log(\r\n            \"after it is broken down\",\r\n            jwt,\r\n            adminJwt,\r\n            user,\r\n            AccountValidationMessage\r\n          );\r\n          window.localStorage.removeItem(\"registerToken\");\r\n          window.localStorage.removeItem(\"resetToken\");\r\n          if (jwt && user) {\r\n            window.localStorage.setItem(\"myToken\", jwt);\r\n            window.localStorage.setItem(\"User\", user);\r\n            window.location.href = \"http://localhost:3000/home\";\r\n          } else if (adminJwt && user) {\r\n            window.localStorage.removeItem(\"myToken\");\r\n            window.localStorage.setItem(\"adminToken\", adminJwt);\r\n            window.localStorage.setItem(\"User\", user);\r\n            window.location.href =\r\n              \"http://localhost:3000/admin-view-workstation-assessments-declined\";\r\n          }\r\n          if (AccountValidationMessage) {\r\n            alert(AccountValidationMessage);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.email);\r\n    console.log(this.state.password);\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string()\r\n              .email()\r\n              .required(\"Required\")\r\n              .matches(/(?=.*@)/, \"This is not an email address.\"),\r\n\r\n            password: Yup.string()\r\n              .required(\"No password provided.\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Login </h2>\r\n                  <div className=\"help\"></div>\r\n\r\n                  <label htmlFor=\"email\">Email</label>\r\n\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value1={values.email}\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ email: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.email && touched.email && \"error\"}\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n                  <label htmlFor=\"email\">Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.password}\r\n                    value={this.state.password}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ password: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.password && touched.password && \"error\"}\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password} </div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Login\r\n                  </button>\r\n\r\n                  <p>\r\n                    <Link to=\"/register\"> Sign Up </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link to=\"/reset\"> Reset Password </Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\n\r\nimport \"../bootstrap.min.css\";\r\nimport Header from \"../PageDetails/Headers/Header\";\r\nimport LoginForm from \"../PageDetails/LoginForm/LoginForm\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <LoginForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport Header from \"../PageDetails/Headers/Header\";\r\n\r\n \r\n\r\nfunction Register() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass ConfirmRegisterForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      users: [],\r\n      name: \"\",\r\n      contactNumber: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      email: \"\"\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      this.state.contactNumber.length < 10 ||\r\n      this.state.password.length < 8 ||\r\n      !(this.state.password === this.state.passwordConfirm)\r\n    ) {\r\n      alert(`please enter the form correctly `);\r\n    } else {\r\n      \r\n       \r\n\r\n      const data = {\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        contactNumber: this.state.contactNumber,\r\n        name: this.state.name\r\n      };\r\n\r\n      fetch(\"/register\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      alert(`Account Created `);\r\n\r\n      window.location.href=\"http://localhost:3000/\"\r\n    }\r\n  }\r\n  catch(e) {\r\n    console.log(e);\r\n    alert(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{\r\n            password: \"\",\r\n            passwordConfirm: \"\",\r\n            name: \"\",\r\n            contactNumber: \"\",\r\n            email: \"\"\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            name: Yup.string().required(\"Name is required\"),\r\n\r\n            email: Yup.string()\r\n              .email()\r\n              .required(\"Email is required\")\r\n              .matches(/(?=.*@)/, \"This is not an email address.\"),\r\n\r\n            contactNumber: Yup.string()\r\n              .required(\"Contact number is required\")\r\n              .matches(/(?=.*[0-9])/, \"Contact number must contain numbers.\"),\r\n\r\n            password: Yup.string()\r\n              .required(\"No password provided.\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n\r\n            passwordConfirm: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n              .required(\"Password confirm is required\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                class=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Sign Up </h2>\r\n                  <div className=\"help\">\r\n                    \r\n                  </div>\r\n\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value2={values.email}\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ email: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.email && touched.email && \"error\"}\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email} </div>\r\n                  )}\r\n\r\n                  <label htmlFor=\"email\">Name</label>\r\n                  <input\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter your name\"\r\n                    value2={values.name}\r\n                    value={this.state.name}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.name && touched.name && \"error\"}\r\n                  />\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"input-feedback\">{errors.name} </div>\r\n                  )}\r\n\r\n                  <label htmlFor=\"email\">Contact Number</label>\r\n                  <input\r\n                    name=\"contactNumber\"\r\n                    type=\"contactNumber\"\r\n                    placeholder=\"Enter your contact number\"\r\n                    value2={values.contactNumber}\r\n                    value={this.state.contactNumber}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ contactNumber: e.target.value })\r\n                    }\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.contactNumber && touched.contactNumber && \"error\"\r\n                    }\r\n                  />\r\n                  {errors.contactNumber && touched.contactNumber && (\r\n                    <div className=\"input-feedback\">\r\n                      {errors.contactNumber}{\" \"}\r\n                    </div>\r\n                  )}\r\n\r\n                  <label htmlFor=\"email\">Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.password}\r\n                    value={this.state.password}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ password: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.password && touched.password && \"error\"}\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password} </div>\r\n                  )}\r\n                  <label htmlFor=\"email\">Password Confirm </label>\r\n                  <input\r\n                    name=\"passwordConfirm\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.passwordConfirm}\r\n                    value={this.state.passwordConfirm}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ passwordConfirm: e.target.value })\r\n                    }\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.passwordConfirm &&\r\n                      touched.passwordConfirm &&\r\n                      \"error\"\r\n                    }\r\n                  />\r\n                  {errors.passwordConfirm && touched.passwordConfirm && (\r\n                    <div className=\"input-feedback\">\r\n                      {errors.passwordConfirm}{\" \"}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                  <p>\r\n                    <Link to=\"/\"> Login Page </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link to=\"/reset\"> Reset Password </Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmRegisterForm;\r\n","import React from \"react\";\r\n\r\nimport \"../bootstrap.min.css\";\r\nimport Header from \"../PageDetails/Headers/Header\";\r\nimport ConfirmRegisterForm from \"../PageDetails/ConfirmRegisterForm/ConfirmRegisterForm\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ConfirmRegisterForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ResetPasswordForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { email: \"\" };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (this.state.email.length < 8) {\r\n      alert(`please enter email correctly `);\r\n    } else {\r\n      const data = { email: this.state.email };\r\n\r\n      fetch(\"/reset-password-email\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json,\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(response => {\r\n          console.log(\"response before it is broken down \" + response);\r\n\r\n          return response.json();\r\n        })\r\n        .then(({ jwt, user, EmailAvailability }) => {\r\n          console.log(\"After it is broken down\", jwt, user, EmailAvailability);\r\n          window.localStorage.setItem(\"resetToken\", jwt);\r\n          window.localStorage.setItem(\"User\", user);\r\n          alert(EmailAvailability);\r\n        })\r\n\r\n        .catch(error => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.email);\r\n    console.log(this.state.password);\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string()\r\n              .email()\r\n              .required(\"Required\")\r\n              .matches(/(?=.*@)/, \"ENter valid Email.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Reset Password </h2>\r\n                  <div className=\"help\">\r\n                    <Popup trigger={<Link> Help?</Link>} className=\"center\">\r\n                      <div>\r\n                        Enter Codestone Email address and Password connected to\r\n                        the account.\r\n                      </div>\r\n                    </Popup>\r\n                  </div>\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value1={values.email}\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ email: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.email && touched.email && \"error\"}\r\n                  />\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email}</div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Send Email\r\n                  </button>\r\n                  <p>\r\n                    <Link to=\"/\"> Login </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link to=\"/Register\"> Sign Up </Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResetPasswordForm;\r\n","import React from \"react\";\r\n\r\nimport Header from \"../PageDetails/Headers/Header\";\r\n\r\nimport ResetPasswordForm from \"../PageDetails/ResetPasswordForm/ResetPasswordForm\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction ResetPasswordPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ResetPasswordForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPasswordPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBarUsers() {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <Link to=\"/user-questions\">\r\n        <button type=\"button\" className=\"btn btn-secondary\">\r\n          Questions\r\n        </button>\r\n      </Link>\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBarUsers;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass LogoutButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.LogOut = this.LogOut.bind(this);\r\n  }\r\n\r\n  LogOut(e) {\r\n    window.localStorage.removeItem(\"myToken\");\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Link to=\"/\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={this.LogOut}>\r\n          Log Out\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogoutButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ProfileButton extends React.Component {\r\n  render() {\r\n    return (\r\n      <Link to=\"/profile\">\r\n        <button type=\"button\" class=\"btn btn-secondary\">\r\n          Profile\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileButton;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass AdminButton extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Link to=\"/admin-center\">\r\n        <button type=\"button\" className=\"btn btn-Primary\">\r\n          Admin\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminButton;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport ReactDOM from \"react-dom\";\r\n// import ModalCompletedQuestions from \"../\";\r\n\r\nmoment.locale(window.navigator.language);\r\n\r\nconsole.log(window.navigator.language);\r\n\r\nvar results = [];\r\nclass AdminWorkstations extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      viewDetails: false,\r\n\r\n      currentPage: 1,\r\n      todosPerPage: 10,\r\n      pageNumbers: [],\r\n      FullDetailsPageToken: false\r\n    };\r\n    this.getQuestionByUniqueDate = this.getQuestionByUniqueDate.bind(this);\r\n    // this.test = this.test.bind(this);\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  handleClick = event => {\r\n    this.setState({\r\n      currentPage: Number(event.target.id)\r\n    });\r\n  };\r\n\r\n  handlePageChange(pageNumber) {\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  componentDidMount() {\r\n    // let User = window.localStorage.getItem(\"User\");\r\n    // fetch(`/user-completed-questions/${User}`)\r\n    //   .then(recordset => recordset.json())\r\n    //   .then(results => {\r\n    //     this.setState({ questions: results.recordset });\r\n    //     console.log(this.state.questions);\r\n    //   });\r\n    let user = window.localStorage.getItem(\"User\");\r\n    fetch(`/user-completed-WSA/${user}`)\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n        console.log(`QuestionResponses array ${this.state.questions}`);\r\n\r\n        this.state.questions &&\r\n          this.getQuestionByUniqueDate(this.state.questions);\r\n      });\r\n  }\r\n\r\n  getQuestionByUniqueDate(questions) {\r\n    for (var i = 0; i < questions.length; i++) {\r\n      if (\r\n        !results.find(q => q.Date == questions[i].Date) ||\r\n        !results.find(\r\n          q => q.AssignedWorkStation == questions[i].AssignedWorkStation\r\n        )\r\n      ) {\r\n        results.push(questions[i]);\r\n        this.setState({ amountOfWorkstations: results.length });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Logic for displaying current todos\r\n    const indexOfLastTodo = this.state.currentPage * this.state.todosPerPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - this.state.todosPerPage;\r\n    const currentTodos = results.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n    const pageNumbers = [];\r\n    for (\r\n      let i = 1;\r\n      i <= Math.ceil(this.state.amountOfWorkstations / this.state.todosPerPage);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    console.log(this.state.questions);\r\n    if (!this.state.FullDetailsPageToken) {\r\n      if (this.state.questions.length) {\r\n        return (\r\n          <div>\r\n            <ul>\r\n              {currentTodos.map(function(r, index) {\r\n                return (\r\n                  <div className=\"jumbotron\">\r\n                    <Questions\r\n                      workStation={r.AssignedWorkstation}\r\n                      date={r.Date}\r\n                      completeToken={r.QuestionStatus}\r\n                      RUId={r.RUId}\r\n                      WSAId={r.WSAId}\r\n                    ></Questions>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div\r\n                style={{ userSelect: \"none\", cursor: \"pointer\" }}\r\n                id=\"page-numbers\"\r\n              >\r\n                {pageNumbers.map(number => {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      key={number}\r\n                      id={number}\r\n                      onClick={this.handleClick}\r\n                    >\r\n                      {number}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else if (!this.state.questions.length) {\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            <div>\r\n              <h2 style={{ textAlign: \"center\" }}>\r\n                Completed Workstation Assessments\r\n              </h2>\r\n\r\n              <ul>\r\n                <br />\r\n                <br />{\" \"}\r\n                <div>\r\n                  <h6> </h6>\r\n                </div>\r\n                <div className=\"jumbotron\">\r\n                  <li style={{ textAlign: \"center\" }}>\r\n                    <b>no completed Workstation Self-Assessments</b>{\" \"}\r\n                  </li>\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </>\r\n        );\r\n      } else if (this.state.FullDetailsPageToken) {\r\n        return <></>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props);\r\n    this.state = {\r\n      ...props,\r\n      questionsAccepted: [],\r\n      questionsAcceptedCounter: \"\",\r\n      selectedSet: [],\r\n      ViewActivityToken: false,\r\n      noteToBeAdded: \"\",\r\n      notesFromDB: [],\r\n      addNoteToken: false,\r\n      answeredQuestions: []\r\n    };\r\n    // this.checker = this.checker.bind(this);\r\n    // this.ViewActivity = this.ViewActivity.bind(this);\r\n    // this.SubmitNote = this.SubmitNote.bind(this);\r\n    // this.AddNoteBtn = this.AddNoteBtn.bind(this);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.ViewActivity) {\r\n      if (!this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        console.log(moment.locale());\r\n        return (\r\n          <div>\r\n            <ModalCompletedQuestions\r\n              RUId={this.props.RUId}\r\n              workStation={this.props.workStation}\r\n              WSAId={this.props.WSAId}\r\n            />\r\n            {/* <button\r\n              onClick={this.checker}\r\n              className=\"btn btn-primary\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Question Responses\r\n            </button> */}\r\n            <Link\r\n              to={{\r\n                pathname: \"/admin-view-full-user-wsa-responses\",\r\n                state: {\r\n                  WSAId: this.props.WSAId\r\n                }\r\n              }}\r\n            >\r\n              <button style={{ float: \"right\" }} className=\"btn btn-primary\">\r\n                View Full Details\r\n              </button>\r\n            </Link>\r\n\r\n            <br />\r\n\r\n            <li>\r\n              <b>User Id: </b>\r\n              {this.props.RUId}\r\n            </li>\r\n            <li>\r\n              <b>Workstation: </b>\r\n              {this.props.workStation}\r\n            </li>\r\n            <li>\r\n              <b>Date: </b>\r\n\r\n              {moment(this.props.date).format(\"L\")}\r\n            </li>\r\n            <li>\r\n              <b>Complete Token: </b>\r\n              {this.props.completeToken}\r\n            </li>\r\n          </div>\r\n        );\r\n      } else if (this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        return (\r\n          <div>\r\n            <button\r\n              style={{ float: \"right\" }}\r\n              onClick={e =>\r\n                this.setState({\r\n                  ViewActivity: false,\r\n                  viewDetails: false,\r\n                  ViewActivityToken: false,\r\n                  addNoteToken: false\r\n                })\r\n              }\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Revert\r\n            </button>\r\n            <br />\r\n            <br />\r\n\r\n            <li> {results.Date}</li>\r\n\r\n            {this.state.selectedSet &&\r\n              this.state.selectedSet.map((item, index) => {\r\n                return (\r\n                  <div>\r\n                    <li>\r\n                      {\" \"}\r\n                      <b>{item.QuestionWhenAnswered}</b>{\" \"}\r\n                    </li>\r\n                    <li>{item.QuestionResponse}</li>\r\n                    <li>{item.Accepted}</li>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n      }\r\n    } else if (this.state.ViewActivity && !this.state.addNoteToken) {\r\n      return (\r\n        <>\r\n          <button\r\n            style={{ float: \"right\" }}\r\n            onClick={e =>\r\n              this.setState({\r\n                ViewActivity: false,\r\n                viewDetails: false,\r\n                ViewActivityToken: false,\r\n                addNoteToken: false\r\n              })\r\n            }\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Revert\r\n          </button>\r\n          <br />\r\n          <li>\r\n            <b>User Id: </b>\r\n            {this.props.RUId}\r\n          </li>\r\n          <li>\r\n            <b>Workstation: </b>\r\n            {this.props.workStation}\r\n          </li>\r\n          <li>\r\n            <b>Date: </b>\r\n            {moment(this.props.date).format(\"DD/MM/YYYY\")}\r\n          </li>\r\n          <li>\r\n            <b>Complete Token: </b>\r\n            {this.props.completeToken}\r\n          </li>\r\n\r\n          {this.state.notesFromDB &&\r\n            this.state.notesFromDB.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    border: \"inset\",\r\n                    borderWidth: \"0.2px\"\r\n                  }}\r\n                >\r\n                  <div style={{ float: \"right\" }}>\r\n                    {moment(item.CreationTime).format(\"HH:MM  DD/MM/YYYY \")}\r\n                  </div>\r\n                  <div>\r\n                    <b>{`${item.UserStatus} `}</b>\r\n                  </div>\r\n\r\n                  <div style={{ textAlign: \"left\" }}>{item.Notes}</div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <br />\r\n          <button\r\n            onClick={this.AddNoteBtn}\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Add Note\r\n          </button>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default AdminWorkstations;\r\n\r\nclass ModalCompletedQuestions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n      show1: false,\r\n      answeredQuestions: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let data = {\r\n      // RUId: this.props.RUId,\r\n      // Workstation: this.props.workStation,\r\n      WSAId: this.props.WSAId\r\n    };\r\n    fetch(\"/get-completed-questions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ answeredQuestions: results.recordset });\r\n        console.log(this.state.answeredQuestions);\r\n      });\r\n  }\r\n  handleClose() {\r\n    this.setState({\r\n      show: false,\r\n      show1: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"header-container\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            style={{ float: \"right\" }}\r\n            onClick={this.handleShow}\r\n          >\r\n            Response Overview\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            size=\"lg\"\r\n            style={{ width: \"100%\" }}\r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            animation={true}\r\n          >\r\n            <h3 style={{ textAlign: \"center\" }}>{this.props.workStation}</h3>\r\n            {this.state.answeredQuestions &&\r\n              this.state.answeredQuestions.map(function(question, index) {\r\n                if (\r\n                  question.QuestionResponse === \"Y\" ||\r\n                  question.QuestionResponse === \"N\"\r\n                ) {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#E6E6E6\",\r\n                          padding: \"1px\"\r\n                        }}\r\n                      >\r\n                        <ul>\r\n                          {\" \"}\r\n                          <b> Q :</b>\r\n                          <div style={{ float: \"right\" }}>✔️</div>\r\n                          {question.QuestionWhenAnswered}\r\n                        </ul>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (question.QuestionResponse === \"P\") {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#BDBDBD\",\r\n                          padding: \"1px\"\r\n                        }}\r\n                      >\r\n                        <ul>\r\n                          <b> Q :</b>\r\n                          {question.QuestionWhenAnswered}{\" \"}\r\n                          <div style={{ float: \"right\" }}>❌</div>\r\n                          {/* <br />\r\n                          <b> S :</b>\r\n                          {question.SuggestedSoloution} */}\r\n                        </ul>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\n\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport NavBar from \"../PageDetails/Headers/NavBarUsers\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport CompletedAssessments from \"../PageDetails/CompletedAssessments/CompletedAssessments\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CompletedAssessments />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"/user-questions\">\r\n        <button className=\"btn btn-secondary\">\r\n          Perform Workstation Self-Assessment\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nvar results = [];\r\nvar questionCounter = 0;\r\n\r\nclass DisplayQuestions extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      QuestionsAnswer: [],\r\n      workstations: [],\r\n      selectedWorkStation: \"\",\r\n      QuestionAndAnswer: {}\r\n    };\r\n    this.submitAnswers = this.submitAnswers.bind(this);\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n    fetch(\"/user-questions\")\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n      });\r\n  }\r\n  getWorkStations() {\r\n    var user = window.localStorage.getItem(\"User\");\r\n    if (user) {\r\n      fetch(`/profile-work-station-detailss/${user}`)\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          this.setState({ workstations: results.recordset });\r\n          console.log(this.state.workstations);\r\n        });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      questions: this.getItems(),\r\n      WorkStations: this.getWorkStations()\r\n    });\r\n  }\r\n\r\n  submitAnswers() {\r\n    let selectedWorkstation = window.localStorage.getItem(\"Workstation\");\r\n    let user = window.localStorage.getItem(\"User\");\r\n\r\n    let completeToken = \"\";\r\n    let declinedCounter = 0;\r\n\r\n    if (questionCounter == this.state.questions.length) {\r\n      var today = new Date(),\r\n        date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n          1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n      for (var i = 0; i < results.length; i++) {\r\n        if (results[i].answer == \"P\") {\r\n          declinedCounter++;\r\n        } else {\r\n        }\r\n      }\r\n\r\n      if (declinedCounter > 0) {\r\n        completeToken = \"In Progress\";\r\n      } else if (declinedCounter <= 0) {\r\n        completeToken = \"Complete\";\r\n      }\r\n\r\n      console.log(completeToken);\r\n      const data = {\r\n        completeToken,\r\n        results,\r\n        selectedWorkstation,\r\n        date,\r\n        user: user\r\n      };\r\n\r\n      fetch(\"/post-question-answers/\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json,\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      }).then(response => {\r\n        console.log(\"response before it is broken down \" + response);\r\n\r\n        return response.json();\r\n      });\r\n\r\n      window.location.href = \"http://localhost:3000/completed-assessment\";\r\n    } else {\r\n      alert(\"Please enter all of The questions\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let selectedWorkStation = window.localStorage.getItem(\"Workstation\");\r\n\r\n    console.log(this.state.questions);\r\n    if (this.state.workstations.length) {\r\n      return (\r\n        <div>\r\n          <h3 style={{ textAlign: \"center\" }}>\r\n            <u>Workstation Self-Assessment</u>\r\n          </h3>\r\n          <ul>\r\n            <DropdownButton\r\n              style={{ float: \"right\" }}\r\n              id=\"dropdown-basic-button\"\r\n              title=\"Select Workstation Location\"\r\n            >\r\n              {this.state.workstations &&\r\n                this.state.workstations.map(function(workstations, index) {\r\n                  return (\r\n                    <div>\r\n                      <WorkStationSelecter\r\n                        workstations={workstations.AssignedWorkstation}\r\n                      >\r\n                        {\" \"}\r\n                      </WorkStationSelecter>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </DropdownButton>\r\n            <br />\r\n            <br />{\" \"}\r\n            <div>\r\n              <h6>\r\n                {\" \"}\r\n                <tr>\r\n                  Desk Location Selected :{\" \"}\r\n                  <u style={{ color: \"grey\" }}>{selectedWorkStation}</u>\r\n                </tr>\r\n              </h6>\r\n            </div>\r\n            {this.state.questions &&\r\n              this.state.questions.map(function(questions, index) {\r\n                return (\r\n                  <div\r\n                    className=\"jumbotron\"\r\n                    style={{ border: \"solid\", borderColor: \"LightGray\" }}\r\n                  >\r\n                    <Questions questions={questions}></Questions>\r\n                  </div>\r\n                );\r\n              })}\r\n            <br />\r\n            <button\r\n              onClick={this.submitAnswers}\r\n              style={{ width: \"100%\" }}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h3 style={{ textAlign: \"center\" }}>\r\n            <u>Workstation Self-Assessment</u>\r\n          </h3>\r\n\r\n          <ul>\r\n            <DropdownButton\r\n              style={{ float: \"right\" }}\r\n              id=\"dropdown-basic-button\"\r\n              title=\"Select Workstation Location\"\r\n            >\r\n              {this.state.workstations &&\r\n                this.state.workstations.map(function(workstations, index) {\r\n                  return (\r\n                    <div>\r\n                      <WorkStationSelecter workstations={workstations}>\r\n                        {\" \"}\r\n                      </WorkStationSelecter>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </DropdownButton>\r\n            <br />\r\n            <br />{\" \"}\r\n            <div>\r\n              <h6>\r\n                {\" \"}\r\n                <tr>\r\n                  Desk Location Selected : <u style={{ color: \"grey\" }}>NULL</u>\r\n                </tr>\r\n              </h6>\r\n              <div className=\"jumbotron\">\r\n                <li style={{ textAlign: \"center\" }}>\r\n                  <b>\r\n                    This account has no workstations assigned to it. Please\r\n                    Navigate to the workstations segment of the profile page to\r\n                    create one\r\n                  </b>{\" \"}\r\n                </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default DisplayQuestions;\r\n\r\nclass WorkStationSelecter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = { ...props };\r\n    this.selectWorkStation = this.selectWorkStation.bind(this);\r\n  }\r\n\r\n  selectWorkStation(e) {\r\n    e.preventDefault();\r\n\r\n    window.localStorage.setItem(\"Workstation\", this.props.workstations);\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Dropdown.Item onClick={this.selectWorkStation}>\r\n          {this.props.workstations}\r\n        </Dropdown.Item>\r\n      </>\r\n    );\r\n  }\r\n}\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n///\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      ...props,\r\n      QuestionAnswer: \"\",\r\n      QuestionAccepted: false,\r\n      problem: false,\r\n\r\n      problemDefinition: \"\",\r\n      completedQuestions: [],\r\n      soloutionForDeclinedQuestion: \"\"\r\n    };\r\n\r\n    this.QuestionDecline = this.QuestionDecline.bind(this);\r\n    this.QuestionOnChange = this.QuestionOnChange.bind(this);\r\n    this.OnCommit = this.OnCommit.bind(this);\r\n\r\n    this.RevertAcceptedAnswer = this.RevertAcceptedAnswer.bind(this);\r\n    this.AdmitProblem = this.AdmitProblem.bind(this);\r\n    this.AdmitNotProblem = this.AdmitNotProblem.bind(this);\r\n    this.QuestionProblem = this.QuestionProblem.bind(this);\r\n    this.SubmitProblemSoloution = this.SubmitProblemSoloution.bind(this);\r\n    this.submitDeclinedQuestionSoloution = this.submitDeclinedQuestionSoloution.bind(\r\n      this\r\n    );\r\n\r\n    this.AcceptAnswer = this.AcceptAnswer.bind(this);\r\n  }\r\n  submitDeclinedQuestionSoloution(e) {\r\n    e.preventDefault();\r\n\r\n    var today = new Date(),\r\n      date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n        1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n    // let answer = this.state.soloutionForDeclinedQuestion;\r\n    let question = this.state.questions.Question;\r\n\r\n    let email = window.localStorage.getItem(\"User\");\r\n    let questionId = this.state.questions.QuestionId;\r\n    let workStation = window.localStorage.getItem(\"Workstation\");\r\n    let suggestedSoloution = this.state.soloutionForDeclinedQuestion;\r\n    // let accepted = 1;\r\n\r\n    let newItem = {\r\n      answer: \"P\",\r\n      question: question,\r\n      // state: state,\r\n      email: email,\r\n      questionId: questionId,\r\n      workStation: workStation,\r\n      // accepted: accepted,\r\n      date: date,\r\n      suggestedSoloution: suggestedSoloution\r\n    };\r\n\r\n    questionCounter++;\r\n    console.log(newItem);\r\n    results.push(newItem);\r\n    console.log(results);\r\n\r\n    this.setState({\r\n      QuestionComplete: true,\r\n      QuestionAccepted: false,\r\n      problem: true,\r\n      questionProblem: true,\r\n      problemSubmitted: false,\r\n      declineSubmitted: true\r\n    });\r\n  }\r\n\r\n  QuestionDecline(e) {\r\n    e.preventDefault();\r\n\r\n    if (this.state.ShowInput) {\r\n      this.setState({ ShowInput: false });\r\n    } else if (!this.state.ShowInput) {\r\n      this.setState({ ShowInput: true });\r\n    }\r\n  }\r\n  AdmitProblem(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      QuestionComplete: true,\r\n      QuestionAccepted: true\r\n    });\r\n  }\r\n  AdmitNotProblem(e) {\r\n    e.preventDefault();\r\n    var today = new Date(),\r\n      date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n        1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n    let answer = \"N\";\r\n    let question = this.state.questions.Question;\r\n    // let state = \"Accepted\";\r\n    let email = window.localStorage.getItem(\"User\");\r\n    let questionId = this.state.questions.QuestionId;\r\n    let workStation = window.localStorage.getItem(\"Workstation\");\r\n    // let accepted = `1`;\r\n\r\n    let newItem = {\r\n      answer: answer,\r\n      question: question,\r\n      // state: state,\r\n      email: email,\r\n      questionId: questionId,\r\n      workStation: workStation,\r\n      // accepted: accepted,\r\n      date: date\r\n      // accepted: 1\r\n    };\r\n    questionCounter++;\r\n    results.push(newItem);\r\n\r\n    console.log(results);\r\n\r\n    this.setState({\r\n      QuestionComplete: true,\r\n      QuestionAccepted: false,\r\n      problem: true\r\n    });\r\n  }\r\n\r\n  QuestionProblem(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      QuestionAccepted: false,\r\n      problem: true,\r\n      questionProblem: true,\r\n      QuestionComplete: true\r\n    });\r\n  }\r\n\r\n  AcceptAnswer(e) {\r\n    e.preventDefault();\r\n\r\n    var today = new Date(),\r\n      date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n        1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n    let answer = \"Y\";\r\n    let question = this.state.questions.Question;\r\n    // let state = \"Accepted\";\r\n    let email = window.localStorage.getItem(\"User\");\r\n    let questionId = this.state.questions.QuestionId;\r\n    let workStation = window.localStorage.getItem(\"Workstation\");\r\n    let accepted = `1`;\r\n\r\n    let newItem = {\r\n      answer: answer,\r\n      question: question,\r\n      // state: state,\r\n      email: email,\r\n      questionId: questionId,\r\n      workStation: workStation,\r\n      // accepted: accepted,\r\n      date: date\r\n    };\r\n\r\n    questionCounter++;\r\n    results.push(newItem);\r\n    console.log(results);\r\n\r\n    this.setState({\r\n      QuestionAccepted: false,\r\n      problem: false,\r\n      questionProblem: false,\r\n      QuestionComplete: true\r\n    });\r\n\r\n    console.log(this.state.QuestionAndAnswer);\r\n\r\n    // fetch(\"Accept-question-answer\", {\r\n    //   method: \"POST\", // or 'PUT'\r\n    //   headers: {\r\n    //     Accept: \"application/json,\",\r\n    //     \"Content-Type\": \"application/json\"\r\n    //   },\r\n    //   body: JSON.stringify(data)\r\n    // }).then(response => {\r\n    //   console.log(\"response before it is broken down \" + response);\r\n  }\r\n\r\n  RevertAcceptedAnswer(e) {\r\n    e.preventDefault();\r\n\r\n    questionCounter--;\r\n    results.splice(\r\n      results.findIndex(r => r.questionId === this.state.questionId),\r\n      1\r\n    );\r\n\r\n    console.log(results);\r\n\r\n    this.setState({\r\n      completedQuestions: false,\r\n      ShowInput: false,\r\n      QuestionComplete: false,\r\n      problem: false,\r\n      QuestionAccepted: false,\r\n      questionProblem: false,\r\n      problemSubmitted: false,\r\n      declineSubmitted: false\r\n    });\r\n  }\r\n\r\n  QuestionOnChange(e) {\r\n    this.setState({ QuestionAnswer: e.target.value });\r\n  }\r\n\r\n  ///////////////////////////////////////////\r\n  OnCommit(e) {\r\n    var today = new Date(),\r\n      date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n        1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n    let User = window.localStorage.getItem(\"User\");\r\n    let WorkStation = window.localStorage.getItem(\"Workstation\");\r\n\r\n    const data = {\r\n      QuestionId: this.state.questions.QuestionId,\r\n      QuestionAnswer: this.state.QuestionAnswer,\r\n      date: date,\r\n      User,\r\n      WorkStation\r\n    };\r\n\r\n    fetch(\"/declined-question-response\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        Accept: \"application/json,\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    }).then(response => {\r\n      console.log(\"response before it is broken down \" + response);\r\n\r\n      // return response.json();\r\n    });\r\n\r\n    this.setState({ QuestionComplete: true, QuestionAccepted: true });\r\n  }\r\n\r\n  SubmitProblemSoloution(e) {\r\n    e.preventDefault();\r\n\r\n    var today = new Date(),\r\n      date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n        1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n    let answer = \"P\";\r\n    let question = this.state.questions.Question;\r\n    let state = \"problem specified\";\r\n\r\n    let email = window.localStorage.getItem(\"User\");\r\n    let questionId = this.state.questions.QuestionId;\r\n    let workStation = window.localStorage.getItem(\"Workstation\");\r\n\r\n    let newItem = {\r\n      answer: answer,\r\n      question: question,\r\n      state: state,\r\n      email: email,\r\n      questionId: questionId,\r\n      workStation: workStation,\r\n\r\n      date: date\r\n      // accepted: 1\r\n    };\r\n    questionCounter++;\r\n    results.push(newItem);\r\n    console.log(results);\r\n\r\n    this.setState({\r\n      QuestionAccepted: false,\r\n      problem: true,\r\n      questionProblem: true,\r\n      problemSubmitted: true\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.QuestionComplete) {\r\n      if (!this.state.ShowInput) {\r\n        return (\r\n          <div>\r\n            <Popup\r\n              trigger={\r\n                <div style={{ float: \"right\" }}>\r\n                  {\" \"}\r\n                  <Link> ℹ️</Link>\r\n                </div>\r\n              }\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n\r\n            <li style={{ textAlign: \"center\" }}>\r\n              <b\r\n                style={{\r\n                  textAlign: \"center\",\r\n\r\n                  textDecoration: \"underline\"\r\n                }}\r\n              >\r\n                {this.state.questions.Question}\r\n              </b>\r\n            </li>\r\n\r\n            <button\r\n              onClick={this.AcceptAnswer}\r\n              className=\"btn btn-secondary\"\r\n              style={{\r\n                width: \"35%\",\r\n                marginLeft: \"230px\",\r\n                marginRight: \"2px\",\r\n                verticalAlign: \"top\"\r\n\r\n                // float: \"right\"\r\n              }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              style={{\r\n                width: \"35%\",\r\n                // float: \"right\",\r\n                marginLeft: \"2px\",\r\n                marginRight: \"2px\",\r\n                verticalAlign: \"top\"\r\n              }}\r\n              onClick={this.QuestionDecline}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              No\r\n            </button>\r\n            <br />\r\n          </div>\r\n        );\r\n      } else if (\r\n        this.state.ShowInput &&\r\n        !this.state.QuestionComplete &&\r\n        !this.state.problem\r\n      ) {\r\n        return (\r\n          <div>\r\n            <Popup\r\n              trigger={<div style={{ float: \"right\" }}> ℹ️</div>}\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n\r\n            <li style={{ textAlign: \"center\", color: \"grey\" }}>\r\n              <b>{this.state.questions.Question}</b>\r\n            </li>\r\n\r\n            <li>\r\n              <b>Your Answer</b>: No{\" \"}\r\n              <Link\r\n                style={{ float: \"right\" }}\r\n                onClick={this.RevertAcceptedAnswer}\r\n              >\r\n                Change\r\n              </Link>\r\n            </li>\r\n\r\n            <li style={{ textAlign: \"center\" }}>\r\n              <b>Is it a problem?</b>\r\n            </li>\r\n            <li>\r\n              {\" \"}\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                style={{\r\n                  width: \"35%\",\r\n                  marginLeft: \"230px\",\r\n                  marginRight: \"2px\",\r\n                  verticalAlign: \"top\"\r\n\r\n                  // float: \"right\"\r\n                }}\r\n                onClick={this.AdmitProblem}\r\n                className=\"btn btn-secondary\"\r\n                // style={{ float: \"left\" }}\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                style={{\r\n                  width: \"35%\",\r\n                  // float: \"right\",\r\n                  marginLeft: \"2px\",\r\n                  marginRight: \"2px\",\r\n                  verticalAlign: \"top\"\r\n                }}\r\n                onClick={this.AdmitNotProblem}\r\n                className=\"btn btn-secondary\"\r\n                // style={{ float: \"left\" }}\r\n              >\r\n                {\" \"}\r\n                No\r\n              </button>\r\n            </li>\r\n          </div>\r\n        );\r\n      }\r\n    } else if (this.state.QuestionComplete) {\r\n      if (\r\n        this.state.QuestionAccepted &&\r\n        !this.state.problem &&\r\n        !this.state.questionProblem &&\r\n        !this.state.problemSubmitted &&\r\n        !this.state.declineSubmitted\r\n      ) {\r\n        return (\r\n          <>\r\n            <Popup\r\n              trigger={<div style={{ float: \"right\" }}> ℹ️</div>}\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n            <h3>\r\n              <li style={{ textAlign: \"center\", color: \"grey\" }}>\r\n                <b>{this.state.questions.Question}</b>\r\n              </li>\r\n\r\n              <li>\r\n                <b>Your Answer</b>: No, and it is a problem{\" \"}\r\n                <Link\r\n                  style={{ float: \"right\" }}\r\n                  onClick={this.RevertAcceptedAnswer}\r\n                >\r\n                  Change\r\n                </Link>\r\n              </li>\r\n\r\n              <br />\r\n            </h3>\r\n            <textarea\r\n              placeholder=\"What would you suggest we do to solve this? \"\r\n              style={{ width: \"100%\" }}\r\n              onChange={e =>\r\n                this.setState({\r\n                  soloutionForDeclinedQuestion: e.target.value\r\n                })\r\n              }\r\n            />\r\n            <button\r\n              onClick={this.submitDeclinedQuestionSoloution}\r\n              className=\"btn btn-secondary\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Submit suggestion\r\n            </button>\r\n          </>\r\n        );\r\n      } else if (\r\n        !this.state.QuestionAccepted &&\r\n        !this.state.problem &&\r\n        !this.state.questionProblem &&\r\n        !this.state.problemSubmitted &&\r\n        !this.state.declineSubmitted\r\n      ) {\r\n        return (\r\n          <>\r\n            <Popup\r\n              trigger={<div style={{ float: \"right\" }}> ℹ️</div>}\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n            <h3>\r\n              <li style={{ textAlign: \"center\", color: \"grey\" }}>\r\n                <b>{this.state.questions.Question}</b>\r\n              </li>\r\n              <li>\r\n                <b>Your answer</b>: Yes\r\n                <Link\r\n                  style={{ float: \"right\" }}\r\n                  onClick={this.RevertAcceptedAnswer}\r\n                >\r\n                  Change\r\n                </Link>\r\n              </li>\r\n            </h3>\r\n          </>\r\n        );\r\n      } else if (\r\n        !this.state.QuestionAccepted &&\r\n        this.state.problem &&\r\n        !this.state.questionProblem &&\r\n        !this.state.problemSubmitted &&\r\n        !this.state.declineSubmitted\r\n      ) {\r\n        return (\r\n          <>\r\n            <Popup\r\n              trigger={<div style={{ float: \"right\" }}> ℹ️</div>}\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n            <h3>\r\n              <li style={{ textAlign: \"center\", color: \"grey\" }}>\r\n                <b>{this.state.questions.Question}</b>\r\n              </li>\r\n              <li>\r\n                <b>Your Answer</b>: No but not a problem\r\n                <Link\r\n                  style={{ float: \"right\" }}\r\n                  onClick={this.RevertAcceptedAnswer}\r\n                >\r\n                  Change\r\n                </Link>\r\n              </li>\r\n            </h3>\r\n          </>\r\n        );\r\n      } else if (\r\n        !this.state.QuestionAccepted &&\r\n        this.state.problem &&\r\n        this.state.questionProblem &&\r\n        !this.state.problemSubmitted &&\r\n        !this.state.declineSubmitted\r\n      ) {\r\n        return (\r\n          <h3>\r\n            <button\r\n              onClick={this.RevertAcceptedAnswer}\r\n              style={{ float: \"right\" }}\r\n              className=\"btn btn-danger\"\r\n            >\r\n              {\" \"}\r\n              Revert Answer\r\n            </button>\r\n            <br />\r\n            <li> {this.state.questions.Question} </li>\r\n\r\n            <textarea\r\n              style={{ width: \"100%\" }}\r\n              onChange={e =>\r\n                this.setState({ problemDefinition: e.target.value })\r\n              }\r\n              placeholder={`Please specify the problem`}\r\n            />\r\n\r\n            <button\r\n              style={{ width: \"100%\" }}\r\n              className=\"btn btn-primary\"\r\n              onClick={this.SubmitProblemSoloution}\r\n            >\r\n              Submit Solution{\" \"}\r\n            </button>\r\n          </h3>\r\n        );\r\n      } else if (\r\n        !this.state.QuestionAccepted &&\r\n        this.state.problem &&\r\n        this.state.questionProblem &&\r\n        !this.state.problemSubmitted &&\r\n        this.state.declineSubmitted\r\n      ) {\r\n        return (\r\n          <>\r\n            <Popup\r\n              trigger={<div style={{ float: \"right\" }}> ℹ️</div>}\r\n              position=\"left center\"\r\n            >\r\n              <div>{this.state.questions.GuidanceNotes}</div>\r\n            </Popup>\r\n            <h3>\r\n              {/* <button\r\n                onClick={this.RevertAcceptedAnswer}\r\n                style={{ float: \"right\" }}\r\n                className=\"btn btn-danger\"\r\n              >\r\n                {\" \"}\r\n                Revert Answer\r\n              </button> */}\r\n              <br />\r\n              <li style={{ textAlign: \"center\", color: \"grey\" }}>\r\n                {\" \"}\r\n                <b>{this.state.questions.Question}</b>{\" \"}\r\n              </li>{\" \"}\r\n              <li>\r\n                <b>Your Answer :</b> No, and its a problem\r\n                <Link\r\n                  style={{ float: \"right\" }}\r\n                  onClick={this.RevertAcceptedAnswer}\r\n                >\r\n                  Change\r\n                </Link>\r\n              </li>\r\n              <li>\r\n                <b>Your suggested soloution: </b>\r\n                {this.state.soloutionForDeclinedQuestion}\r\n              </li>\r\n              {/* <li>Complete : ✔️ </li> */}\r\n            </h3>\r\n          </>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport DisplayQuestions from \"../PageDetails/DisplayQuestions/DisplayQuestions\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DisplayQuestions />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n<br/><br/>\r\n     <Link to = \"./home\"><button className = \"btn btn-secondary\"> Home </button></Link>\r\n    </div>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\nimport Header from \"../PageDetails/Headers/Header\";\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { confirmedUser: false };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.setState({ confirmedUser: true });\r\n    alert(`Email Confirmed `);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <p>If you are real press the button. If you are a robot dont.</p>\r\n        <button onClick={this.handleSubmit}>Confirm</button>{\" \"}\r\n        <Link to=\"/\">\r\n          <button>Back to Login</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass ConfirmResetPasswordForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [], email: \"\", password: \"\", passwordConfirm: \"\" };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const email = window.localStorage.getItem(\"User\");\r\n    if (\r\n      this.state.password.length < 8 ||\r\n      !(this.state.password === this.state.passwordConfirm)\r\n    ) {\r\n      alert(`please enter the form correctly `);\r\n    } else {\r\n      console.log({ email });\r\n      const data = { email, password: this.state.password };\r\n\r\n      fetch(\"/password-confirm\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n      alert(`Password updated `);\r\n    }\r\n  }\r\n\r\n  catch(e) {\r\n    console.log(e);\r\n    alert(e);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{ email: \"\", password: \"\", passwordConfirm: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            password: Yup.string()\r\n              .required(\"No password provided.\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n\r\n            passwordConfirm: Yup.string()\r\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n              .required(\"Password confirm is required\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                class=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Confirm Password Reset </h2>\r\n                  <div className=\"help\">\r\n                    <Popup trigger={<Link> Help?</Link>} className=\"center\">\r\n                      <div>\r\n                        Enter Codestone Email address and Password connected to\r\n                        the account.\r\n                      </div>\r\n                    </Popup>\r\n                  </div>\r\n\r\n                  <label htmlFor=\"email\">Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.password}\r\n                    value={this.state.password}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ password: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.password && touched.password && \"error\"}\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password} </div>\r\n                  )}\r\n                  <label htmlFor=\"email\">Password Confirm </label>\r\n                  <input\r\n                    name=\"passwordConfirm\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.passwordConfirm}\r\n                    value={this.state.passwordConfirm}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ passwordConfirm: e.target.value })\r\n                    }\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.passwordConfirm &&\r\n                      touched.passwordConfirm &&\r\n                      \"error\"\r\n                    }\r\n                  />\r\n                  {errors.passwordConfirm && touched.passwordConfirm && (\r\n                    <div className=\"input-feedback\">\r\n                      {errors.passwordConfirm}{\" \"}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Sign Up\r\n                  </button>\r\n                  <p>\r\n                    <Link to=\"/\"> Login Page </Link>\r\n                  </p>\r\n                  <p>\r\n                    <Link to=\"/reset\"> Reset Password </Link>\r\n                  </p>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmResetPasswordForm;\r\n","import React from \"react\";\r\n\r\nimport \"../bootstrap.min.css\";\r\nimport Header from \"../PageDetails/Headers/Header\";\r\nimport ConfirmResetPasswordForm from \"../PageDetails/ConfirmResetPasswordForm/ConfirmResetPasswordForm\";\r\n\r\nfunction LoginPage() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ConfirmResetPasswordForm />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass RegisterForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      users: [],\r\n      name: \"\",\r\n      contactNumber: \"\",\r\n      password: \"\",\r\n      passwordConfirm: \"\",\r\n      email: \"\"\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const currentEmail = window.localStorage.getItem(\"User\");\r\n\r\n    if (this.state.contactNumber.length < 10) {\r\n      alert(`Contact number to short `);\r\n    } else {\r\n      const data = {\r\n        currentEmail: currentEmail,\r\n        email: this.state.email,\r\n\r\n        contactNumber: this.state.contactNumber,\r\n        name: this.state.name\r\n      };\r\n\r\n      fetch(\"/update-account-details\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      window.localStorage.removeItem(\"User\");\r\n      window.localStorage.setItem(\"User\", this.state.email);\r\n      alert(`Details updated. PLease Refresh the page`);\r\n      console.log(data);\r\n    }\r\n  }\r\n  catch(e) {\r\n    console.log(e);\r\n    alert(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{\r\n            name: \"\",\r\n            contactNumber: \"\"\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string()\r\n              .email()\r\n              .required(\"Required\")\r\n              .matches(/(?=.*@)/, \"Enter valid Email.\"),\r\n\r\n            name: Yup.string().required(\"Name is required\"),\r\n\r\n            contactNumber: Yup.string()\r\n              .required(\"Contact number is required\")\r\n              .matches(/(?=.*[0-9])/, \"Contact number must contain numbers.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                class=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Update Account Details </h2>\r\n                  <div className=\"help\">\r\n                    <Popup trigger={<Link> Help?</Link>} className=\"center\">\r\n                      <div>\r\n                        Enter Codestone Email address and Password connected to\r\n                        the account.\r\n                      </div>\r\n                    </Popup>\r\n                  </div>\r\n\r\n                  <label htmlFor=\"email\">Email</label>\r\n\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter your email\"\r\n                    value2={values.email}\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ email: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.email && touched.email && \"error\"}\r\n                  />\r\n\r\n                  {errors.email && touched.email && (\r\n                    <div className=\"input-feedback\">{errors.email} </div>\r\n                  )}\r\n\r\n                  <label htmlFor=\"email\">Name</label>\r\n                  <input\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter your name\"\r\n                    value2={values.name}\r\n                    value={this.state.name}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ name: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.name && touched.name && \"error\"}\r\n                  />\r\n                  {errors.name && touched.name && (\r\n                    <div className=\"input-feedback\">{errors.name} </div>\r\n                  )}\r\n\r\n                  <label htmlFor=\"email\">Contact Number</label>\r\n                  <input\r\n                    name=\"contactNumber\"\r\n                    type=\"contactNumber\"\r\n                    placeholder=\"Enter your contact number\"\r\n                    value2={values.contactNumber}\r\n                    value={this.state.contactNumber}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ contactNumber: e.target.value })\r\n                    }\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.contactNumber && touched.contactNumber && \"error\"\r\n                    }\r\n                  />\r\n                  {errors.contactNumber && touched.contactNumber && (\r\n                    <div className=\"input-feedback\">\r\n                      {errors.contactNumber}{\" \"}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport UpdateAccountDetailsForm from \"./UpdateAccountDetailsForm\";\r\n\r\nclass DisplayUserAcountDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { AccountDetails: [] };\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n    var user = window.localStorage.getItem(\"User\");\r\n    if (user) {\r\n      fetch(`/profile-account-details/${user}`)\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          this.setState({ AccountDetails: results.recordset });\r\n        });\r\n    } else {\r\n      alert(\"user not set\");\r\n    }\r\n  }\r\n  //when the component mounts make the sql questions the\r\n  componentDidMount() {\r\n    this.setState({\r\n      AccountDetails: this.getItems()\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ul>\r\n        <button\r\n          className=\"btn btn-secondary\"\r\n          style={{ float: \"left \" }}\r\n          disabled\r\n        >\r\n          Account Details\r\n        </button>\r\n\r\n        <Link to=\"/profile-display-work-stations\">\r\n          <button className=\"btn btn-secondary\" style={{ float: \"left \" }}>\r\n            Manage Work stations\r\n          </button>\r\n        </Link>\r\n        <button\r\n          style={{ float: \"right\" }}\r\n          className=\"btn btn-secondary\"\r\n          onClick={this.handleRefresh}\r\n        >\r\n          ⟲\r\n        </button>\r\n        <br />\r\n        <br />\r\n\r\n        {this.state.AccountDetails &&\r\n          this.state.AccountDetails.map(function(AccountDetails, index) {\r\n            return (\r\n              <div className=\"jumbotron\">\r\n                <UpdateAccountDetails />\r\n                <h3>Account Details</h3>\r\n                <li> Email: {AccountDetails.Email}</li>\r\n                <li> Name: {AccountDetails.NameOfUser}</li>\r\n                <li> Contact Number: {AccountDetails.ContactNumber} </li>\r\n                <li></li>\r\n              </div>\r\n            );\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUserAcountDetails;\r\n\r\nclass UpdateAccountDetails extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false,\r\n      show1: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          Update\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <UpdateAccountDetailsForm />{\" \"}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass ConfirmResetPasswordForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [], email: \"\", password: \"\", passwordConfirm: \"\" };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const email = window.localStorage.getItem(\"User\");\r\n    if (\r\n      this.state.password.length < 8 ||\r\n      !(this.state.password === this.state.passwordConfirm)\r\n    ) {\r\n      alert(`please enter the form correctly `);\r\n    } else {\r\n      var today = new Date(),\r\n        date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n          1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n      console.log(today);\r\n      console.log(date);\r\n      const data = { email, password: this.state.password, date };\r\n\r\n      fetch(\"/password-profile-update\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n      alert(`Password updated `);\r\n    }\r\n  }\r\n\r\n  catch(e) {\r\n    console.log(e);\r\n    alert(e);\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{ email: \"\", password: \"\", passwordConfirm: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            password: Yup.string()\r\n              .required(\"No password provided.\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n              .matches(/(?=.*[0-9])/, \"Password must contain a number.\"),\r\n\r\n            passwordConfirm: Yup.string()\r\n              .oneOf([Yup.ref(\"password\"), \"passwords must match\"])\r\n              .required(\"Password confirm is required\")\r\n              .min(8, \"Password is too short - should be 8 chars minimum.\")\r\n          })}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                class=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h2>Update Password </h2>\r\n                  <div className=\"help\">\r\n                    <Popup trigger={<Link> Help?</Link>} className=\"center\">\r\n                      <div>\r\n                        Enter Codestone Email address and Password connected to\r\n                        the account.\r\n                      </div>\r\n                    </Popup>\r\n                  </div>\r\n\r\n                  <label htmlFor=\"email\">Password</label>\r\n                  <input\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.password}\r\n                    value={this.state.password}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ password: e.target.value })}\r\n                    onBlur={handleBlur}\r\n                    className={errors.password && touched.password && \"error\"}\r\n                  />\r\n                  {errors.password && touched.password && (\r\n                    <div className=\"input-feedback\">{errors.password} </div>\r\n                  )}\r\n                  <label htmlFor=\"email\">Password Confirm </label>\r\n                  <input\r\n                    name=\"passwordConfirm\"\r\n                    type=\"password\"\r\n                    placeholder=\"Enter your password\"\r\n                    value2={values.passwordConfirm}\r\n                    value={this.state.passwordConfirm}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ passwordConfirm: e.target.value })\r\n                    }\r\n                    onBlur={handleBlur}\r\n                    className={\r\n                      errors.passwordConfirm &&\r\n                      touched.passwordConfirm &&\r\n                      \"error\"\r\n                    }\r\n                  />\r\n                  {errors.passwordConfirm && touched.passwordConfirm && (\r\n                    <div className=\"input-feedback\">\r\n                      {errors.passwordConfirm}{\" \"}\r\n                    </div>\r\n                  )}\r\n\r\n                  <button\r\n                    style={{ width: \"100%\" }}\r\n                    className=\"btn btn-primary\"\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Update Password\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmResetPasswordForm;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport UpdatePassword from \"./UpdatePasswordForm\";\r\n\r\nclass DisplayUserAcountDetails extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { AccountDetails: [] };\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n    var user = window.localStorage.getItem(\"User\");\r\n    if (user) {\r\n      fetch(`/profile-account-details/${user}`)\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          this.setState({ AccountDetails: results.recordset });\r\n        });\r\n    } else {\r\n      alert(\"user not set\");\r\n    }\r\n  }\r\n  //when the component mounts make the sql questions the\r\n  componentDidMount() {\r\n    this.setState({\r\n      AccountDetails: this.getItems()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.AccountDetails ? (\r\n          <ul>\r\n            {this.state.AccountDetails &&\r\n              this.state.AccountDetails.map(function(AccountDetails, index) {\r\n                return (\r\n                  <div className=\"jumbotron\">\r\n                    <DisplayAddWorkstation />\r\n                    <h3>Password Details</h3>\r\n                    <li> Last Updated: {AccountDetails.LastPasswordUpdate}</li>\r\n\r\n                    <li></li>\r\n                  </div>\r\n                );\r\n              })}\r\n          </ul>\r\n        ) : (\r\n          <ul>\r\n            <div className=\"jumbotron\">\r\n              <h3>Password Detail</h3>\r\n              <Link style={{ float: \"right\" }} to=\"/update-password-details\">\r\n                <button className=\"btn btn-primary\">Update</button>\r\n              </Link>\r\n              <li> Last Updated: Account has not been updated</li>\r\n\r\n              <li></li>\r\n            </div>\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DisplayUserAcountDetails;\r\n\r\nclass DisplayAddWorkstation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          Update\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <UpdatePassword />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport DisplayUserAccountDetails from \"../PageDetails/UpdateProfileForm/DislplayUserAccountDetails\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport DisplayUserPasswordDetails from \"../PageDetails/UpdateProfileForm/DisplayUserPasswordDetails\";\r\n \r\nimport { Link } from \"react-router-dom\";\r\nfunction ProfilePage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <h3 style={{ textAlign: \"center\" }}>\r\n        <u> Account Details</u>\r\n      </h3>\r\n\r\n      <DisplayUserAccountDetails />\r\n      <DisplayUserPasswordDetails />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n<br/>\r\n <Link to=\"./home\">\r\n      <button className = \"btn btn-secondary\">Home</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nclass AddWorkstation extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      Location: \"\",\r\n      ExtraInformation: \"\",\r\n      PrimaryWorkStation: true\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    try {\r\n      if (this.state.Location.length < 3) {\r\n        alert(\"Location has to be 3 characters minimum\");\r\n      } else {\r\n        console.log(this.state.ExtraInformation);\r\n        console.log(this.state.Location);\r\n\r\n        const email = window.localStorage.getItem(\"User\");\r\n\r\n        var today = new Date(),\r\n          date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n            1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n        console.log(date);\r\n        const data = {\r\n          email,\r\n\r\n          Location: this.state.Location,\r\n\r\n          date\r\n        };\r\n\r\n        fetch(\"/add-workstation\", {\r\n          method: \"POST\", // or 'PUT'\r\n          headers: {\r\n            Accept: \"application/json, text/plain, */*\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(data)\r\n        });\r\n        alert(\"Workstation Added. Refresh the page to view updates\");\r\n      }\r\n      window.location.reload();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  catch(e) {\r\n    console.log(e);\r\n    alert(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form>\r\n          <div className=\"jumbotron\">\r\n            <h2 style={{ textAlign: \"center\" }}>Add Workstation </h2>\r\n\r\n            <label htmlFor=\"email\">Location</label>\r\n            <div>\r\n              <input\r\n                style={{ width: \"100%\" }}\r\n                ref={c => (this.textarea = c)}\r\n                placeholder=\"Enter Location (e.g. Office)\"\r\n                rows={1}\r\n                defaultValue=\"\"\r\n                onChange={e => this.setState({ Location: e.target.value })}\r\n              />\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ width: \"100%\" }}\r\n              onClick={this.onSubmit}\r\n            >\r\n              Add workstation\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddWorkstation;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport moment from \"moment\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nimport AddWorkstation from \"./UpdateUserWorkStationDetailsForm\";\r\n\r\nclass ManageWorkstations extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { AccountDetails: [], exist: \"\" };\r\n    this.getItems = this.getItems.bind(this);\r\n  }\r\n  ///////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n    try {\r\n      var user = window.localStorage.getItem(\"User\");\r\n      if (user) {\r\n        fetch(`/profile-work-station-detailss/${user}`)\r\n          .then(recordset => recordset.json())\r\n          .then(results => {\r\n            console.log(this.state.AccountDetails);\r\n            this.setState({ AccountDetails: results.recordset });\r\n\r\n            console.log(this.state.AccountDetails);\r\n          });\r\n      } else {\r\n        alert(\"user not set\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  ////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  //when the component mounts make the sql questions the\r\n  componentDidMount() {\r\n    this.getItems();\r\n\r\n    console.log(this.state.AccountDetails);\r\n  }\r\n  render() {\r\n    if (this.state.AccountDetails.length) {\r\n      return (\r\n        <ul>\r\n          <Link to=\"/profile\">\r\n            <button style={{ float: \"left\" }} className=\"btn btn-secondary\">\r\n              Account Details\r\n            </button>\r\n          </Link>\r\n          <button\r\n            style={{ float: \"left\" }}\r\n            className=\"btn btn-secondary\"\r\n            disabled\r\n          >\r\n            Manage Workstations\r\n          </button>\r\n\r\n          <DisplayAddWorkstation />\r\n\r\n          <br />\r\n          <br />\r\n\r\n          {this.state.AccountDetails &&\r\n            this.state.AccountDetails.map(function(AccountDetails, index) {\r\n              return (\r\n                <WorkStations AccountDetails={AccountDetails}></WorkStations>\r\n              );\r\n            })}\r\n        </ul>\r\n      );\r\n    } else {\r\n      return (\r\n        <ul>\r\n          <Link to=\"/profile\">\r\n            <button style={{ float: \"left\" }} className=\"btn btn-secondary\">\r\n              Account Details\r\n            </button>\r\n          </Link>\r\n          <button\r\n            style={{ float: \"left\" }}\r\n            className=\"btn btn-secondary\"\r\n            disabled\r\n          >\r\n            Manage Workstations\r\n          </button>\r\n\r\n          <DisplayAddWorkstation />\r\n          <br />\r\n          <br />\r\n          <div className=\"jumbotron\">\r\n            <li style={{ textAlign: \"center\" }}>\r\n              <b>Please add a workplace using the blue + button.</b>{\" \"}\r\n            </li>\r\n          </div>\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default ManageWorkstations;\r\n\r\nclass WorkStations extends React.Component {\r\n  var;\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = { ...props };\r\n    this.deleteWorkStation = this.deleteWorkStation.bind(this);\r\n  }\r\n\r\n  deleteWorkStation(e) {\r\n    //console.log(`${this.state.AccountDetails.UDId}`);\r\n    let QuestionId = this.state.AccountDetails.UDId;\r\n    console.log(QuestionId);\r\n\r\n    let data = { QuestionId };\r\n\r\n    fetch(\"/delete-work-station\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    alert(\"Item Deleted\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"jumbotron\">\r\n        <button\r\n          onClick={this.deleteWorkStation}\r\n          style={{ float: \"right\" }}\r\n          className=\"btn btn-secondary\"\r\n        >\r\n          x\r\n        </button>\r\n        <h3>Work Station</h3>\r\n\r\n        <li key=\"Desk-Location\">\r\n          Desk Location : {this.state.AccountDetails.AssignedWorkstation}\r\n        </li>\r\n\r\n        <li key=\"Date-Added\">\r\n          Date Added :\r\n          {moment(this.state.AccountDetails.DateAdded).format(\" DD/MM/YYYY \")}\r\n        </li>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DisplayAddWorkstation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          +\r\n        </button>\r\n\r\n        <button\r\n          style={{ float: \"right\" }}\r\n          className=\"btn btn-secondary\"\r\n          onClick={this.handleRefresh}\r\n        >\r\n          ⟲\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <AddWorkstation />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport DisplayUserAccountDetails from \"../PageDetails/UpdateProfileForm/DislplayUserAccountDetails\";\r\nimport DisplayUserWorkStationDetails from \"../PageDetails/UpdateProfileForm/DisplayUserWorkStationDetails\";\r\nimport DisplayUserPasswordDetails from \"../PageDetails/UpdateProfileForm/DisplayUserPasswordDetails\";\r\n \r\nimport NavBar from \"../PageDetails/Headers/NavBarUsers\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\n\r\nimport Popup from \"reactjs-popup\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction ProfilePage() {\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <DisplayUserWorkStationDetails />\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n<br/>\r\n\r\n\r\n <Link to= \"./home\">\r\n      <button className =\" btn btn-secondary\" >Home</button>\r\n   </Link>  \r\n    </div> \r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal,DropdownButton,Dropdown } from \"react-bootstrap\";\r\n\r\n \r\nclass DisplayQuestions extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { questions: [], QuestionsAnswer: [], workstations: [] , selectedWorkStation: \"\"};\r\n  //  this.onSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n      let WorkStation = window.localStorage.getItem(\"Workstation\")\r\n      let User = window.localStorage.getItem(\"User\")\r\n      console.log(`LOOK AT THIS ${WorkStation}`)\r\n\r\n    fetch(`/user-completed-questions/${WorkStation}/${User}`)\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n      });   \r\n  }\r\n  \r\n   getWorkStations() {\r\n    var user = window.localStorage.getItem(\"User\");\r\n    if (user) {\r\n      fetch(`/profile-work-station-detailss/${user}`)\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          this.setState({ workstations: results.recordset });\r\n          console.log(this.state.workstations) \r\n        });\r\n    }  \r\n  } \r\n  \r\n  componentDidMount() {\r\n    this.setState({\r\n      questions: this.getItems(),\r\n       WorkStations :this.getWorkStations()\r\n    });\r\n  }\r\n \r\n  render() {\r\n   let selectedWorkStation= window.localStorage.getItem(\"Workstation\")\r\n    var self = this;\r\n    console.log(this.state.questions);\r\n    return (\r\n      <div>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          <u>History</u>\r\n        </h3>\r\n\r\n        <ul><Link to=\"./user-questions\">\r\n          <button\r\n            \r\n            className=\"btn btn-secondary\"\r\n            style={{ float: \"left \" }}\r\n          >\r\n           Workstation Self-Assessment\r\n          </button>    </Link>\r\n          \r\n            <button className=\"btn btn-secondary\" disabled style={{ float: \"left \" }}>\r\n              History\r\n            </button>\r\n        \r\n       \r\n          \r\n \r\n\r\n\r\n<DropdownButton style ={{float : \"right\"}}  id=\"dropdown-basic-button\" title=\"Select Workstation Location\">\r\n{this.state.workstations &&\r\n              this.state.workstations.map(function(workstations, index) { \r\n                return (\r\n                  <div >\r\n                     <WorkStationSelecter workstations = {workstations}> </WorkStationSelecter>\r\n                  </div>\r\n                );\r\n              })}</DropdownButton> \r\n         \r\n<br/>\r\n<br/>          <div >\r\n            <h6> <tr>Desk Location Selected :  <u style = {{ color : \"grey\" }}>{selectedWorkStation}</u></tr></h6>\r\n</div>\r\n \r\n <div className = \"jumbotron\"> \r\n            {this.state.questions &&\r\n              this.state.questions.map(function(questions, index) {\r\n                 \r\n                return (\r\n                  \r\n                 \r\n                   \r\n                    <Questions questions={questions}></Questions>\r\n                   \r\n                   \r\n                );\r\n              })}\r\n         </div>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayQuestions;\r\n\r\n\r\nclass WorkStationSelecter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = { ...props,    };\r\n    this.selectWorkStation = this.selectWorkStation.bind(this)\r\n  }\r\n\r\nselectWorkStation(e)\r\n{\r\n  e.preventDefault()\r\n \r\n \r\n\r\nwindow.localStorage.setItem(\"Workstation\", this.state.workstations.DeskLocation)\r\nwindow.location.reload()\r\n  \r\n   \r\n}\r\n  render() {\r\n      return (\r\n        <>\r\n        <Dropdown.Item onClick={this.selectWorkStation}>{this.state.workstations.DeskLocation} </Dropdown.Item>\r\n         \r\n      \r\n      </>\r\n      );\r\n   \r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = { ...props,  };\r\n}\r\n  \r\n  render() {\r\n  \r\n    if (this.state.questions.Accepted >0 ) {\r\n      return (\r\n          <div  >\r\n          \r\n          <h4 style = {{float:\"right\"}}>✔️</h4> \r\n          <br />\r\n          \r\n          <li> Question When Answered: {this.state.questions.QuestionWhenAnswered}</li>\r\n          <li> Question Status: <b>{this.state.questions.QuestionResponse}</b></li>\r\n          <li> Date: {this.state.questions.Date}</li>\r\n        </div>\r\n      );\r\n    } else   {\r\n      return (\r\n        <div  >\r\n          <h4 style = {{float:\"right\"}}>❌</h4> \r\n        <br />\r\n         \r\n        <li> Question When Answered: {this.state.questions.QuestionWhenAnswered}</li>\r\n        <li> Question Status: <b>Declined</b></li>\r\n        <li> Question Response: {this.state.questions.QuestionResponse}</li>\r\n        <li> Date: {this.state.questions.Date}</li>\r\n      </div>\r\n      );\r\n    }\r\n  }\r\n  }\r\n ","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\n\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport NavBar from \"../PageDetails/Headers/NavBarUsers\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DisplayHistory from \"../PageDetails/DisplayQuestions/DisplayHistory\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DisplayHistory/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n<br/><br/>\r\n     <Link to = \"./home\"><button className = \"btn btn-secondary\"> Home </button></Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import Popup from \"reactjs-popup\";\r\n\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport React from \"react\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nclass AddQuestion extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      Question: \"\",\r\n      GuidanceNote: \"\"\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      if (this.state.Question.length < 10) {\r\n        alert(`Please enter a more descriptive question`);\r\n      } else if (this.state.GuidanceNote.length < 10) {\r\n        alert(\"Please enter a more descriptive guidance note\");\r\n      } else {\r\n        var today = new Date(),\r\n          date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n            1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n        const data = {\r\n          Question: this.state.Question,\r\n          GuidanceNote: this.state.GuidanceNote\r\n        };\r\n        console.log(date);\r\n\r\n        fetch(\"/admin-add-question\", {\r\n          method: \"POST\", // or 'PUT'\r\n          headers: {\r\n            Accept: \"application/json,\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(data)\r\n        })\r\n          .then(response => {\r\n            console.log(\"response before it is broken down \" + response);\r\n\r\n            return response.json();\r\n          })\r\n          .then(({ adminJwt, jwt, user, AccountValidationMessage }) => {\r\n            console.log(\r\n              \"after it is broken down\",\r\n              jwt,\r\n              adminJwt,\r\n              user,\r\n              AccountValidationMessage\r\n            );\r\n          });\r\n        alert(\"Question Added\");\r\n        //\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.email);\r\n    console.log(this.state.password);\r\n    return (\r\n      <div>\r\n        <Formik\r\n          class=\"form-signin\"\r\n          action=\"auth\"\r\n          method=\"POST\"\r\n          initialValues={{ email: \"\", password: \"\" }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              console.log(\"Logging in\", values);\r\n              setSubmitting(false);\r\n            }, 500);\r\n          }}\r\n        >\r\n          {props => {\r\n            const {\r\n              values,\r\n              touched,\r\n              errors,\r\n\r\n              handleChange,\r\n              handleBlur,\r\n              handleSubmit\r\n            } = props;\r\n\r\n            return (\r\n              <form\r\n                onSubmit={handleSubmit}\r\n                className=\"form-signin\"\r\n                action=\"auth\"\r\n                method=\"POST\"\r\n              >\r\n                <div className=\"jumbotron\">\r\n                  <h3 style={{ textAlign: \"center\" }}>Enter New Question</h3>\r\n                  <div className=\"help\"></div>\r\n\r\n                  <textarea\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Enter new question\"\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e => this.setState({ Question: e.target.value })}\r\n                  />\r\n\r\n                  <textarea\r\n                    style={{ width: \"100%\" }}\r\n                    placeholder=\"Enter guidance note for question\"\r\n                    value={this.state.email}\r\n                    onInput={handleChange}\r\n                    onChange={e =>\r\n                      this.setState({ GuidanceNote: e.target.value })\r\n                    }\r\n                  />\r\n\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    style={{ width: \"100%\" }}\r\n                    type=\"submit\"\r\n                    onClick={this.onSubmit}\r\n                  >\r\n                    Add Question\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddQuestion;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport AddQuestion from \"./AdminAddQuestion\";\r\nclass DisplayQuestions extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      QuestionsAnswer: [],\r\n      QuestionsSeverity: []\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  getItems() {\r\n    fetch(\"/user-questions\")\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n      });\r\n  }\r\n  //when the component mounts make the sql questions the s\r\n  componentDidMount() {\r\n    this.setState({\r\n      questions: this.getItems()\r\n    });\r\n  }\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    const data = {\r\n      QuestionID: this.QuestionID,\r\n      QuestionsAnswer: this.state.QuestionsAnswer,\r\n      QuestionSeverity: this.state.QuestionsSeverity\r\n    };\r\n\r\n    try {\r\n      fetch(\"/Question-Response\", {\r\n        method: \"POST\", // or 'PUT'\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(\"Success:\", data);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    } catch (error) {}\r\n  }\r\n  refresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    console.log(this.state.questions);\r\n\r\n    return (\r\n      <>\r\n        <h3 style={{ textAlign: \"center\" }}>\r\n          <u>Edit Questions</u>\r\n        </h3>\r\n\r\n        <ul>\r\n          <Link to=\"/admin-view-workstation-assessments\">\r\n            <button className=\"btn btn-secondary\" style={{ float: \"left \" }}>\r\n              Workstation Assessments\r\n            </button>\r\n          </Link>\r\n\r\n          <button\r\n            disabled\r\n            className=\"btn btn-secondary\"\r\n            style={{ float: \"left \" }}\r\n          >\r\n            Edit Questions\r\n          </button>\r\n\r\n          <DisplayAddQuestion />\r\n\r\n          <button\r\n            onClick={this.refresh}\r\n            style={{ float: \"right\" }}\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            ⟳\r\n          </button>\r\n          <Link to=\"./admin-center-view-users\">\r\n            <button className=\"btn btn-secondary\" style={{ float: \"left \" }}>\r\n              View Users\r\n            </button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n\r\n          {this.state.questions &&\r\n            this.state.questions.map(function(questions, index) {\r\n              return (\r\n                <div className=\"jumbotron\">\r\n                  <WorkStations questions={questions}></WorkStations>\r\n                </div>\r\n              );\r\n            })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayQuestions;\r\n\r\nclass WorkStations extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      ...props,\r\n      show: false,\r\n      QuestionUpdate: \"\",\r\n      GuidanceNotesUpdate: \"\",\r\n      deleteToken: false,\r\n      confirmDeleteToken: false\r\n    };\r\n  }\r\n\r\n  render() {\r\n    {\r\n      return (\r\n        <div>\r\n          <DisplayDeleteConfirmation\r\n            question={this.state.questions.Question}\r\n            questionId={this.state.questions.QuestionId}\r\n          />\r\n          <EditQuestionModal\r\n            question={this.state.questions.Question}\r\n            guidanceNote={this.state.questions.GuidanceNotes}\r\n          />\r\n\r\n          <br />\r\n\r\n          <li>\r\n            <b>Question: </b> {this.state.questions.Question}\r\n          </li>\r\n          <li>\r\n            <b>Guidance Notes: </b>\r\n            {this.state.questions.GuidanceNotes}{\" \"}\r\n          </li>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass DisplayAddQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n      show1: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false,\r\n      show1: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          +\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <AddQuestion />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass DisplayDeleteConfirmation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n    this.DeleteQuestionAndGuidanceNotes = this.DeleteQuestionAndGuidanceNotes.bind(\r\n      this\r\n    );\r\n\r\n    this.state = {\r\n      show: false,\r\n      question: \"\",\r\n      questionId: \"\"\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n  DeleteQuestionAndGuidanceNotes() {\r\n    let question = this.props.question;\r\n    let questionId = this.props.questionId;\r\n\r\n    let data = { question, questionId };\r\n\r\n    fetch(\"/delete-question\", {\r\n      method: \"POST\", // or 'PUT'\r\n      headers: {\r\n        Accept: \"application/json, text/plain, */*\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    alert(\"Item Deleted\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          X\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <div className=\"jumbotron\">\r\n            <h4>Are you sure you want to delete this?</h4>\r\n            <ul>\r\n              <button\r\n                onClick={this.DeleteQuestionAndGuidanceNotes}\r\n                style={{\r\n                  width: \"50%\",\r\n                  paddingLeft: \"1px\",\r\n                  paddingRight: \"1px\"\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Yes\r\n              </button>\r\n              <button\r\n                onClick={e => this.setState({ show: false })}\r\n                style={{\r\n                  width: \"50%\",\r\n                  paddingLeft: \"1px\",\r\n                  paddingRight: \"1px\"\r\n                }}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                No\r\n              </button>\r\n            </ul>\r\n          </div>\r\n          <Modal.Body></Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditQuestionModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n      show1: false\r\n    };\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      show: false,\r\n      show1: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          Edit\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <EditQuestion\r\n              question={this.props.question}\r\n              guidanceNote={this.props.guidanceNote}\r\n            />\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      question: \"\",\r\n      guidanceNote: \"\"\r\n    };\r\n    this.onSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      question: this.props.question,\r\n      guidanceNote: this.props.guidanceNote\r\n    });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    try {\r\n      if (this.state.question.length < 10) {\r\n        alert(`Please enter a more descriptive question`);\r\n      } else if (this.state.guidanceNote.length < 10) {\r\n        alert(\"Please enter a more descriptive guidance note\");\r\n      } else {\r\n        var today = new Date(),\r\n          date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n            1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n        const data = {\r\n          Question: this.state.question,\r\n          GuidanceNote: this.state.guidanceNote,\r\n          date: date,\r\n          previousQuestion: this.props.question,\r\n          previousGuidanceNote: this.props.guidanceNote\r\n        };\r\n        fetch(\"/admin-edit-question\", {\r\n          method: \"POST\", // or 'PUT'\r\n          headers: {\r\n            Accept: \"application/json,\",\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify(data)\r\n        }).then(response => {\r\n          console.log(\"response before it is broken down \" + response);\r\n\r\n          return response.json();\r\n        });\r\n        // .then(({ adminJwt, jwt, user, AccountValidationMessage }) => {\r\n        //   console.log(\r\n        //     \"after it is broken down\",\r\n        //     jwt,\r\n        //     adminJwt,\r\n        //     user,\r\n        //     AccountValidationMessage\r\n        //   );\r\n        // });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.email);\r\n    console.log(this.state.password);\r\n    return (\r\n      <div>\r\n        <form>\r\n          <div className=\"jumbotron\">\r\n            <h3 style={{ textAlign: \"center\" }}>Edit Question</h3>\r\n            <div className=\"help\"></div>\r\n\r\n            <textarea\r\n              style={{ width: \"100%\" }}\r\n              value={this.state.question}\r\n              onChange={e => this.setState({ question: e.target.value })}\r\n            />\r\n\r\n            <textarea\r\n              style={{ width: \"100%\" }}\r\n              value={this.state.guidanceNote}\r\n              onChange={e => this.setState({ guidanceNote: e.target.value })}\r\n            />\r\n\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ width: \"100%\" }}\r\n              type=\"submit\"\r\n              onClick={this.onSubmit}\r\n            >\r\n              Update Question\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport AdminDisplayQuestions from \"../AdminComponents/AdminDisplayQuestions/AdminDisplayQuestions\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n\r\n      <AdminDisplayQuestions />\r\n\r\n      <p>Admin section of the webpage </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"./home\">\r\n        <button className=\"btn btn-secondary\">Home </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <DisplayUsers />\r\n\r\n      <p>Admin section of the webpage </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"./home\">\r\n        <button className=\"btn btn-secondary\">Home </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nclass DisplayUsers extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.getItems()\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    try {\r\n      fetch(\"/admin-view-users\")\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          console.log(results.recordset);\r\n          this.setState({ users: results.recordset });\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <ul>\r\n        <h2 style={{ textAlign: \"center\" }}>Registered Users</h2>\r\n        <Link to=\"./admin-view-workstation-assessments\">\r\n          <button className=\"btn btn-secondary\">Workstation Assessments</button>\r\n        </Link>\r\n        <Link to=\"./admin-center\">\r\n          <button className=\"btn btn-secondary\">Edit Questions</button>\r\n        </Link>\r\n        <button disabled className=\"btn btn-secondary\">\r\n          View Users\r\n        </button>\r\n        {this.state.users &&\r\n          this.state.users.map(function(user, index) {\r\n            return (\r\n              <div className=\"jumbotron\">\r\n                <li> Unique ID: {user.RUId}</li>\r\n                <li> User Email:{user.Email}</li>\r\n                <li>User Name: {user.NameOfUser}</li>\r\n                <li>Contact Number: {user.ContactNumber}</li>\r\n                <li>Last Login {user.LastLogin}</li>\r\n                <li>Last Password Update {user.LastLogin}</li>\r\n                <button className=\"btn btn-secondary\">See Details</button>\r\n              </div>\r\n            );\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import \"./ViewWorkstationModal.css\";\r\nimport React from \"react\";\r\nimport { Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\n//hello\r\n//hello\r\n//hello\r\n//hello\r\n\r\n// import \"./bootstrap.min.css\";\r\nclass DisplayAddQuestion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n\r\n    this.state = {\r\n      show: false,\r\n      show1: false,\r\n      answeredQuestions: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let data = {\r\n      // RUId: this.props.RUId,\r\n      // Workstation: this.props.workStation,\r\n      WSAId: this.props.WSAId\r\n    };\r\n    fetch(\"/get-completed-questions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ answeredQuestions: results.recordset });\r\n        console.log(this.state.answeredQuestions);\r\n      });\r\n  }\r\n  handleClose() {\r\n    this.setState({\r\n      show: false,\r\n      show1: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"header-container\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            style={{ float: \"right\" }}\r\n            onClick={this.handleShow}\r\n          >\r\n            Response Overview\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <Modal\r\n            size=\"lg\"\r\n            style={{ width: \"100%\" }}\r\n            show={this.state.show}\r\n            onHide={this.handleClose}\r\n            animation={true}\r\n          >\r\n            <h3 style={{ textAlign: \"center\" }}>{this.props.workStation}</h3>\r\n            {this.state.answeredQuestions &&\r\n              this.state.answeredQuestions.map(function(question, index) {\r\n                if (\r\n                  question.QuestionResponse === \"Y\" ||\r\n                  question.QuestionResponse === \"N\"\r\n                ) {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#E6E6E6\",\r\n                          padding: \"1px\"\r\n                        }}\r\n                      >\r\n                        <ul>\r\n                          {\" \"}\r\n                          <b> Q :</b>\r\n                          <div style={{ float: \"right\" }}>✔️</div>\r\n                          {question.QuestionWhenAnswered}\r\n                        </ul>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                } else if (question.QuestionResponse === \"P\") {\r\n                  return (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"#BDBDBD\",\r\n                          padding: \"1px\"\r\n                        }}\r\n                      >\r\n                        <ul>\r\n                          <b> Q :</b>\r\n                          {question.QuestionWhenAnswered}{\" \"}\r\n                          <div style={{ float: \"right\" }}>❌</div>\r\n                          {/* <br />\r\n                          <b> S :</b>\r\n                          {question.SuggestedSoloution} */}\r\n                        </ul>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                }\r\n              })}\r\n          </Modal>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nexport default DisplayAddQuestion;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ModalCompletedQuestions from \"../AdminDisplayWorkstations/AdminViewWorkstationDetails\";\r\n\r\nmoment.locale(window.navigator.language);\r\n\r\nconsole.log(window.navigator.language);\r\n\r\nvar results = [];\r\nclass AdminWorkstations extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      viewDetails: false,\r\n\r\n      currentPage: 1,\r\n      todosPerPage: 10,\r\n      pageNumbers: [],\r\n      FullDetailsPageToken: false\r\n    };\r\n    this.getQuestionByUniqueDate = this.getQuestionByUniqueDate.bind(this);\r\n    // this.test = this.test.bind(this);\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  handleClick = event => {\r\n    this.setState({\r\n      currentPage: Number(event.target.id)\r\n    });\r\n  };\r\n\r\n  handlePageChange(pageNumber) {\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`/admin-completed-workstations`)\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n        console.log(`QuestionResponses array ${this.state.questions}`);\r\n\r\n        this.state.questions &&\r\n          this.getQuestionByUniqueDate(this.state.questions);\r\n      });\r\n  }\r\n\r\n  getQuestionByUniqueDate(questions) {\r\n    for (var i = 0; i < questions.length; i++) {\r\n      if (\r\n        !results.find(q => q.Date == questions[i].Date) ||\r\n        !results.find(\r\n          q => q.AssignedWorkStation == questions[i].AssignedWorkStation\r\n        )\r\n      ) {\r\n        results.push(questions[i]);\r\n        this.setState({ amountOfWorkstations: results.length });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Logic for displaying current todos\r\n    const indexOfLastTodo = this.state.currentPage * this.state.todosPerPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - this.state.todosPerPage;\r\n    const currentTodos = results.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n    const pageNumbers = [];\r\n    for (\r\n      let i = 1;\r\n      i <= Math.ceil(this.state.amountOfWorkstations / this.state.todosPerPage);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    console.log(this.state.questions);\r\n    if (!this.state.FullDetailsPageToken) {\r\n      if (this.state.questions.length) {\r\n        return (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              Completed Workstation Assessments\r\n            </h2>\r\n            <ul>\r\n              <button disabled className=\"btn btn-secondary\">\r\n                Workstation Assessments\r\n              </button>\r\n              <Link to=\"./admin-center\">\r\n                <button className=\"btn btn-secondary\">Edit Questions</button>\r\n              </Link>\r\n              <Link to=\"./admin-center-view-users\">\r\n                <button className=\"btn btn-secondary\">View Users</button>\r\n              </Link>\r\n              <DropdownButton\r\n                style={{ float: \"right\" }}\r\n                id=\"dropdown-basic-button\"\r\n                title=\"Completed\"\r\n              >\r\n                <Dropdown.Item>\r\n                  {\" \"}\r\n                  <Link to=\"admin-view-workstation-assessments-declined\">\r\n                    In Progress\r\n                  </Link>\r\n                </Dropdown.Item>\r\n              </DropdownButton>{\" \"}\r\n            </ul>\r\n\r\n            <ul>\r\n              {currentTodos.map(function(r, index) {\r\n                return (\r\n                  <div className=\"jumbotron\">\r\n                    <Questions\r\n                      workStation={r.AssignedWorkstation}\r\n                      date={r.Date}\r\n                      completeToken={r.QuestionStatus}\r\n                      RUId={r.RUId}\r\n                      WSAId={r.WSAId}\r\n                    ></Questions>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div\r\n                style={{ userSelect: \"none\", cursor: \"pointer\" }}\r\n                id=\"page-numbers\"\r\n              >\r\n                {pageNumbers.map(number => {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      key={number}\r\n                      id={number}\r\n                      onClick={this.handleClick}\r\n                    >\r\n                      {number}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else if (!this.state.questions.length) {\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            <div>\r\n              <h2 style={{ textAlign: \"center\" }}>\r\n                Completed Workstation Assessments\r\n              </h2>\r\n\r\n              <ul>\r\n                <br />\r\n                <br />{\" \"}\r\n                <div>\r\n                  <h6> </h6>\r\n                </div>\r\n                <div className=\"jumbotron\">\r\n                  <li style={{ textAlign: \"center\" }}>\r\n                    <b>no completed Workstation Self-Assessments</b>{\" \"}\r\n                  </li>\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </>\r\n        );\r\n      } else if (this.state.FullDetailsPageToken) {\r\n        return <></>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props);\r\n    this.state = {\r\n      ...props,\r\n      questionsAccepted: [],\r\n      questionsAcceptedCounter: \"\",\r\n      selectedSet: [],\r\n      ViewActivityToken: false,\r\n      noteToBeAdded: \"\",\r\n      notesFromDB: [],\r\n      addNoteToken: false,\r\n      answeredQuestions: []\r\n    };\r\n    // this.checker = this.checker.bind(this);\r\n    // this.ViewActivity = this.ViewActivity.bind(this);\r\n    // this.SubmitNote = this.SubmitNote.bind(this);\r\n    // this.AddNoteBtn = this.AddNoteBtn.bind(this);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.ViewActivity) {\r\n      if (!this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        console.log(moment.locale());\r\n        return (\r\n          <div>\r\n            <ModalCompletedQuestions\r\n              RUId={this.props.RUId}\r\n              workStation={this.props.workStation}\r\n              WSAId={this.props.WSAId}\r\n            />\r\n            {/* <button\r\n              onClick={this.checker}\r\n              className=\"btn btn-primary\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Question Responses\r\n            </button> */}\r\n            <Link\r\n              to={{\r\n                pathname: \"/admin-view-full-user-wsa-responses\",\r\n                state: {\r\n                  WSAId: this.props.WSAId\r\n                }\r\n              }}\r\n            >\r\n              <button style={{ float: \"right\" }} className=\"btn btn-primary\">\r\n                View Full Details\r\n              </button>\r\n            </Link>\r\n\r\n            <br />\r\n\r\n            <li>\r\n              <b>User Id: </b>\r\n              {this.props.RUId}\r\n            </li>\r\n            <li>\r\n              <b>Workstation: </b>\r\n              {this.props.workStation}\r\n            </li>\r\n            <li>\r\n              <b>Date: </b>\r\n\r\n              {moment(this.props.date).format(\"L\")}\r\n            </li>\r\n            <li>\r\n              <b>Complete Token: </b>\r\n              {this.props.completeToken}\r\n            </li>\r\n          </div>\r\n        );\r\n      } else if (this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        return (\r\n          <div>\r\n            <button\r\n              style={{ float: \"right\" }}\r\n              onClick={e =>\r\n                this.setState({\r\n                  ViewActivity: false,\r\n                  viewDetails: false,\r\n                  ViewActivityToken: false,\r\n                  addNoteToken: false\r\n                })\r\n              }\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Revert\r\n            </button>\r\n            <br />\r\n            <br />\r\n\r\n            <li> {results.Date}</li>\r\n\r\n            {this.state.selectedSet &&\r\n              this.state.selectedSet.map((item, index) => {\r\n                return (\r\n                  <div>\r\n                    <li>\r\n                      {\" \"}\r\n                      <b>{item.QuestionWhenAnswered}</b>{\" \"}\r\n                    </li>\r\n                    <li>{item.QuestionResponse}</li>\r\n                    <li>{item.Accepted}</li>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n      }\r\n    } else if (this.state.ViewActivity && !this.state.addNoteToken) {\r\n      return (\r\n        <>\r\n          <button\r\n            style={{ float: \"right\" }}\r\n            onClick={e =>\r\n              this.setState({\r\n                ViewActivity: false,\r\n                viewDetails: false,\r\n                ViewActivityToken: false,\r\n                addNoteToken: false\r\n              })\r\n            }\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Revert\r\n          </button>\r\n          <br />\r\n          <li>\r\n            <b>User Id: </b>\r\n            {this.props.RUId}\r\n          </li>\r\n          <li>\r\n            <b>Workstation: </b>\r\n            {this.props.workStation}\r\n          </li>\r\n          <li>\r\n            <b>Date: </b>\r\n            {moment(this.props.date).format(\"DD/MM/YYYY\")}\r\n          </li>\r\n          <li>\r\n            <b>Complete Token: </b>\r\n            {this.props.completeToken}\r\n          </li>\r\n\r\n          {this.state.notesFromDB &&\r\n            this.state.notesFromDB.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    border: \"inset\",\r\n                    borderWidth: \"0.2px\"\r\n                  }}\r\n                >\r\n                  <div style={{ float: \"right\" }}>\r\n                    {moment(item.CreationTime).format(\"HH:MM  DD/MM/YYYY \")}\r\n                  </div>\r\n                  <div>\r\n                    <b>{`${item.UserStatus} `}</b>\r\n                  </div>\r\n\r\n                  <div style={{ textAlign: \"left\" }}>{item.Notes}</div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <br />\r\n          <button\r\n            onClick={this.AddNoteBtn}\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Add Note\r\n          </button>\r\n        </>\r\n      );\r\n      // } else if (this.state.ViewActivity && this.state.addNoteToken) {\r\n      //   return (\r\n      //     <>\r\n      //       {\" \"}\r\n      //       <>\r\n      //         <button\r\n      //           style={{ float: \"right\" }}\r\n      //           onClick={e =>\r\n      //             this.setState({\r\n      //               ViewActivity: false,\r\n      //               viewDetails: false,\r\n      //               ViewActivityToken: false,\r\n      //               addNoteToken: false\r\n      //             })\r\n      //           }\r\n      //           className=\"btn btn-secondary\"\r\n      //         >\r\n      //           Revert\r\n      //         </button>\r\n      //         <br />\r\n      //         <li>\r\n      //           <b>User Id: </b>\r\n      //           {this.props.RUId}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Workstation: </b>\r\n      //           {this.props.workStation}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Date: </b>\r\n      //           {moment(this.props.date).format(\"DD/MM/YYYY\")}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Complete Token: </b>\r\n      //           {this.props.completeToken}\r\n      //         </li>\r\n\r\n      //         {this.state.notesFromDB &&\r\n      //           this.state.notesFromDB.map((item, index) => {\r\n      //             return (\r\n      //               <div\r\n      //                 style={{\r\n      //                   backgroundColor: \"white\",\r\n      //                   border: \"inset\",\r\n      //                   borderWidth: \"0.2px\"\r\n      //                 }}\r\n      //               >\r\n      //                 <div style={{ float: \"right\" }}>\r\n      //                   {moment(item.CreationTime).format(\"L\")}\r\n      //                 </div>\r\n      //                 <div>\r\n      //                   <b>{`${item.UserStatus} `}</b>\r\n      //                 </div>\r\n\r\n      //                 <div style={{ textAlign: \"left\" }}>{item.Notes}</div>\r\n      //               </div>\r\n      //             );\r\n      //           })}\r\n\r\n      //         <br />\r\n      //         <input\r\n      //           onChange={e => this.setState({ noteToBeAdded: e.target.value })}\r\n      //         />\r\n\r\n      //         <button\r\n      //           onClick={this.SubmitNote}\r\n      //           className=\"btn btn-primary\"\r\n      //           style={{ width: \"100%\" }}\r\n      //         >\r\n      //           Submit Button\r\n      //         </button>\r\n      //       </>\r\n      //     </>\r\n      //   );\r\n    }\r\n  }\r\n}\r\nexport default AdminWorkstations;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport AdminWorkstations from \"../AdminComponents/AdminDisplayQuestions/AdminViewWorkStations\";\r\n\r\nfunction AdminViewWorkstations() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <AdminWorkstations />\r\n    </div>\r\n  );\r\n}\r\nexport default AdminViewWorkstations;\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"./home\">\r\n        <button className=\"btn btn-secondary\">Home </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Modal, DropdownButton, Dropdown } from \"react-bootstrap\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ModalCompletedQuestions from \"../AdminDisplayWorkstations/AdminViewWorkstationDetails\";\r\n\r\nmoment.locale(window.navigator.language);\r\n\r\nconsole.log(window.navigator.language);\r\n\r\nvar results = [];\r\nclass AdminWorkstations extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      questions: [],\r\n      viewDetails: false,\r\n\r\n      currentPage: 1,\r\n      todosPerPage: 10,\r\n      pageNumbers: [],\r\n      FullDetailsPageToken: false\r\n    };\r\n    this.getQuestionByUniqueDate = this.getQuestionByUniqueDate.bind(this);\r\n    // this.test = this.test.bind(this);\r\n  }\r\n  // sets the questions form sql into state for questions\r\n  handleClick = event => {\r\n    this.setState({\r\n      currentPage: Number(event.target.id)\r\n    });\r\n  };\r\n\r\n  handlePageChange(pageNumber) {\r\n    this.setState({ activePage: pageNumber });\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`/admin-in-progress-WSA`)\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ questions: results.recordset });\r\n        console.log(`QuestionResponses array ${this.state.questions}`);\r\n\r\n        this.state.questions &&\r\n          this.getQuestionByUniqueDate(this.state.questions);\r\n      });\r\n  }\r\n\r\n  getQuestionByUniqueDate(questions) {\r\n    for (var i = 0; i < questions.length; i++) {\r\n      if (\r\n        !results.find(q => q.Date == questions[i].Date) ||\r\n        !results.find(\r\n          q => q.AssignedWorkStation == questions[i].AssignedWorkStation\r\n        )\r\n      ) {\r\n        results.push(questions[i]);\r\n        this.setState({ amountOfWorkstations: results.length });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // Logic for displaying current todos\r\n    const indexOfLastTodo = this.state.currentPage * this.state.todosPerPage;\r\n    const indexOfFirstTodo = indexOfLastTodo - this.state.todosPerPage;\r\n    const currentTodos = results.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n    const pageNumbers = [];\r\n    for (\r\n      let i = 1;\r\n      i <= Math.ceil(this.state.amountOfWorkstations / this.state.todosPerPage);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    console.log(this.state.questions);\r\n    if (!this.state.FullDetailsPageToken) {\r\n      if (this.state.questions.length) {\r\n        return (\r\n          <div>\r\n            <h2 style={{ textAlign: \"center\" }}>\r\n              In Progress Workstation Assessments\r\n            </h2>\r\n            <ul>\r\n              <button disabled className=\"btn btn-secondary\">\r\n                Workstation Assessments\r\n              </button>\r\n              <Link to=\"./admin-center\">\r\n                <button className=\"btn btn-secondary\">Edit Questions</button>\r\n              </Link>\r\n              <Link to=\"./admin-center-view-users\">\r\n                <button className=\"btn btn-secondary\">View Users</button>\r\n              </Link>\r\n              <DropdownButton\r\n                style={{ float: \"right\" }}\r\n                id=\"dropdown-basic-button\"\r\n                title=\"In Progress\"\r\n              >\r\n                <Dropdown.Item>\r\n                  {\" \"}\r\n                  <Link to=\"admin-view-workstation-assessments\">Completed</Link>\r\n                </Dropdown.Item>\r\n              </DropdownButton>{\" \"}\r\n            </ul>\r\n\r\n            <ul>\r\n              {currentTodos.map(function(r, index) {\r\n                return (\r\n                  <div className=\"jumbotron\">\r\n                    <Questions\r\n                      workStation={r.AssignedWorkstation}\r\n                      date={r.Date}\r\n                      completeToken={r.QuestionStatus}\r\n                      RUId={r.RUId}\r\n                      WSAId={r.WSAId}\r\n                    ></Questions>\r\n                  </div>\r\n                );\r\n              })}\r\n              <div\r\n                style={{ userSelect: \"none\", cursor: \"pointer\" }}\r\n                id=\"page-numbers\"\r\n              >\r\n                {pageNumbers.map(number => {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      key={number}\r\n                      id={number}\r\n                      onClick={this.handleClick}\r\n                    >\r\n                      {number}\r\n                    </button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </ul>\r\n          </div>\r\n        );\r\n      } else if (!this.state.questions.length) {\r\n        return (\r\n          <>\r\n            {\" \"}\r\n            <div>\r\n              <h2 style={{ textAlign: \"center\" }}>\r\n                In Progress Workstation Assessments\r\n              </h2>\r\n              <ul>\r\n                <button disabled className=\"btn btn-secondary\">\r\n                  Workstation Assessments\r\n                </button>\r\n                <Link to=\"./admin-center\">\r\n                  <button className=\"btn btn-secondary\">Edit Questions</button>\r\n                </Link>\r\n                <Link to=\"./admin-center-view-users\">\r\n                  <button className=\"btn btn-secondary\">View Users</button>\r\n                </Link>\r\n                <DropdownButton\r\n                  style={{ float: \"right\" }}\r\n                  id=\"dropdown-basic-button\"\r\n                  title=\"In Progress\"\r\n                >\r\n                  <Dropdown.Item>\r\n                    {\" \"}\r\n                    <Link to=\"admin-view-workstation-assessments\">\r\n                      Completed\r\n                    </Link>\r\n                  </Dropdown.Item>\r\n                </DropdownButton>{\" \"}\r\n                <br />{\" \"}\r\n                <div>\r\n                  <h6> </h6>\r\n                </div>\r\n                <div className=\"jumbotron\">\r\n                  <li style={{ textAlign: \"center\" }}>\r\n                    <b>No In Progress Workstation Self-Assessments</b>{\" \"}\r\n                  </li>\r\n                </div>\r\n              </ul>\r\n            </div>\r\n          </>\r\n        );\r\n      } else if (this.state.FullDetailsPageToken) {\r\n        return <></>;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Questions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props);\r\n    this.state = {\r\n      ...props,\r\n      questionsAccepted: [],\r\n      questionsAcceptedCounter: \"\",\r\n      selectedSet: [],\r\n      ViewActivityToken: false,\r\n      noteToBeAdded: \"\",\r\n      notesFromDB: [],\r\n      addNoteToken: false,\r\n      answeredQuestions: []\r\n    };\r\n    // this.checker = this.checker.bind(this);\r\n    // this.ViewActivity = this.ViewActivity.bind(this);\r\n    // this.SubmitNote = this.SubmitNote.bind(this);\r\n    // this.AddNoteBtn = this.AddNoteBtn.bind(this);\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.ViewActivity) {\r\n      if (!this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        console.log(moment.locale());\r\n        return (\r\n          <div>\r\n            <ModalCompletedQuestions\r\n              RUId={this.props.RUId}\r\n              workStation={this.props.workStation}\r\n              WSAId={this.props.WSAId}\r\n            />\r\n            {/* <button\r\n              onClick={this.checker}\r\n              className=\"btn btn-primary\"\r\n              style={{ float: \"right\" }}\r\n            >\r\n              Question Responses\r\n            </button> */}\r\n            <Link\r\n              to={{\r\n                pathname: \"/admin-view-full-user-wsa-responses\",\r\n                state: {\r\n                  WSAId: this.props.WSAId\r\n                }\r\n              }}\r\n            >\r\n              <button style={{ float: \"right\" }} className=\"btn btn-primary\">\r\n                View Full Details\r\n              </button>\r\n            </Link>\r\n\r\n            <br />\r\n\r\n            <li>\r\n              <b>User Id: </b>\r\n              {this.props.RUId}\r\n            </li>\r\n            <li>\r\n              <b>Workstation: </b>\r\n              {this.props.workStation}\r\n            </li>\r\n            <li>\r\n              <b>Date: </b>\r\n\r\n              {moment(this.props.date).format(\"L\")}\r\n            </li>\r\n            <li>\r\n              <b>Complete Token: </b>\r\n              {this.props.completeToken}\r\n            </li>\r\n          </div>\r\n        );\r\n      } else if (this.state.viewDetails && !this.state.ViewActivityToken) {\r\n        return (\r\n          <div>\r\n            <button\r\n              style={{ float: \"right\" }}\r\n              onClick={e =>\r\n                this.setState({\r\n                  ViewActivity: false,\r\n                  viewDetails: false,\r\n                  ViewActivityToken: false,\r\n                  addNoteToken: false\r\n                })\r\n              }\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Revert\r\n            </button>\r\n            <br />\r\n            <br />\r\n\r\n            <li> {results.Date}</li>\r\n\r\n            {this.state.selectedSet &&\r\n              this.state.selectedSet.map((item, index) => {\r\n                return (\r\n                  <div>\r\n                    <li>\r\n                      {\" \"}\r\n                      <b>{item.QuestionWhenAnswered}</b>{\" \"}\r\n                    </li>\r\n                    <li>{item.QuestionResponse}</li>\r\n                    <li>{item.Accepted}</li>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        );\r\n      }\r\n    } else if (this.state.ViewActivity && !this.state.addNoteToken) {\r\n      return (\r\n        <>\r\n          <button\r\n            style={{ float: \"right\" }}\r\n            onClick={e =>\r\n              this.setState({\r\n                ViewActivity: false,\r\n                viewDetails: false,\r\n                ViewActivityToken: false,\r\n                addNoteToken: false\r\n              })\r\n            }\r\n            className=\"btn btn-secondary\"\r\n          >\r\n            Revert\r\n          </button>\r\n          <br />\r\n          <li>\r\n            <b>User Id: </b>\r\n            {this.props.RUId}\r\n          </li>\r\n          <li>\r\n            <b>Workstation: </b>\r\n            {this.props.workStation}\r\n          </li>\r\n          <li>\r\n            <b>Date: </b>\r\n            {moment(this.props.date).format(\"DD/MM/YYYY\")}\r\n          </li>\r\n          <li>\r\n            <b>Complete Token: </b>\r\n            {this.props.completeToken}\r\n          </li>\r\n\r\n          {this.state.notesFromDB &&\r\n            this.state.notesFromDB.map((item, index) => {\r\n              return (\r\n                <div\r\n                  style={{\r\n                    backgroundColor: \"white\",\r\n                    border: \"inset\",\r\n                    borderWidth: \"0.2px\"\r\n                  }}\r\n                >\r\n                  <div style={{ float: \"right\" }}>\r\n                    {moment(item.CreationTime).format(\"HH:MM  DD/MM/YYYY \")}\r\n                  </div>\r\n                  <div>\r\n                    <b>{`${item.UserStatus} `}</b>\r\n                  </div>\r\n\r\n                  <div style={{ textAlign: \"left\" }}>{item.Notes}</div>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n          <br />\r\n          <button\r\n            onClick={this.AddNoteBtn}\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            Add Note\r\n          </button>\r\n        </>\r\n      );\r\n      // } else if (this.state.ViewActivity && this.state.addNoteToken) {\r\n      //   return (\r\n      //     <>\r\n      //       {\" \"}\r\n      //       <>\r\n      //         <button\r\n      //           style={{ float: \"right\" }}\r\n      //           onClick={e =>\r\n      //             this.setState({\r\n      //               ViewActivity: false,\r\n      //               viewDetails: false,\r\n      //               ViewActivityToken: false,\r\n      //               addNoteToken: false\r\n      //             })\r\n      //           }\r\n      //           className=\"btn btn-secondary\"\r\n      //         >\r\n      //           Revert\r\n      //         </button>\r\n      //         <br />\r\n      //         <li>\r\n      //           <b>User Id: </b>\r\n      //           {this.props.RUId}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Workstation: </b>\r\n      //           {this.props.workStation}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Date: </b>\r\n      //           {moment(this.props.date).format(\"DD/MM/YYYY\")}\r\n      //         </li>\r\n      //         <li>\r\n      //           <b>Complete Token: </b>\r\n      //           {this.props.completeToken}\r\n      //         </li>\r\n\r\n      //         {this.state.notesFromDB &&\r\n      //           this.state.notesFromDB.map((item, index) => {\r\n      //             return (\r\n      //               <div\r\n      //                 style={{\r\n      //                   backgroundColor: \"white\",\r\n      //                   border: \"inset\",\r\n      //                   borderWidth: \"0.2px\"\r\n      //                 }}\r\n      //               >\r\n      //                 <div style={{ float: \"right\" }}>\r\n      //                   {moment(item.CreationTime).format(\"L\")}\r\n      //                 </div>\r\n      //                 <div>\r\n      //                   <b>{`${item.UserStatus} `}</b>\r\n      //                 </div>\r\n\r\n      //                 <div style={{ textAlign: \"left\" }}>{item.Notes}</div>\r\n      //               </div>\r\n      //             );\r\n      //           })}\r\n\r\n      //         <br />\r\n      //         <input\r\n      //           onChange={e => this.setState({ noteToBeAdded: e.target.value })}\r\n      //         />\r\n\r\n      //         <button\r\n      //           onClick={this.SubmitNote}\r\n      //           className=\"btn btn-primary\"\r\n      //           style={{ width: \"100%\" }}\r\n      //         >\r\n      //           Submit Button\r\n      //         </button>\r\n      //       </>\r\n      //     </>\r\n      //   );\r\n    }\r\n  }\r\n}\r\nexport default AdminWorkstations;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport AdminWorkstations from \"../AdminComponents/AdminDisplayQuestions/AdminViewWorkStationsDeclined\";\r\n\r\nfunction AdminViewWorkstations() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <AdminWorkstations />\r\n    </div>\r\n  );\r\n}\r\nexport default AdminViewWorkstations;\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"./home\">\r\n        <button className=\"btn btn-secondary\">Home </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport balloons from \"../PageDetails/Pictures/balloons.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\n\r\nimport logo from \"../codestone logo.png\";\r\n\r\nclass LandingPage extends React.Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n\r\n        {/* <img\r\n          style={{ float: \"left\" }}\r\n          className=\"profile-image\"\r\n          alt=\"icon\"\r\n          src={balloons}\r\n          width=\"430\"\r\n          height=\"60\"\r\n        />\r\n        <img\r\n          style={{ float: \"right\" }}\r\n          className=\"profile-image\"\r\n          alt=\"icon\"\r\n          src={balloons}\r\n          width=\"340\"\r\n          height=\"60\"\r\n        /> */}\r\n        <div className=\"jumbotron blue\">\r\n          <h2 style={{ textAlign: \"center\" }}>Congradulations</h2>\r\n          <p style={{ textAlign: \"center\" }}>\r\n            Your desk assessment has been completed. Return home to see this\r\n          </p>\r\n          <Link to=\"/home\">\r\n            <button style={{ width: \"100%\" }} className=\"btn btn-primary\">\r\n              {\" \"}\r\n              Home\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <br />\r\n      <br />\r\n      <Link to=\"./home\">\r\n        <button className=\"btn btn-secondary\">Home </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport moment from \"moment\";\r\nimport NavBar from \"../PageDetails/Headers/NavBarUsers\";\r\nimport LogOutButton from \"../PageDetails/Buttons/LogOutButton/LogOutButton\";\r\nimport ProfileButton from \"../PageDetails/Buttons/ProfileButton/ProfileButton\";\r\nimport AdminButton from \"../PageDetails/Buttons/AdminButton/AdminButton\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport { get } from \"http\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answeredQuestions: [],\r\n      WSAHeader: []\r\n    };\r\n    this.getWSAAnsweredQuestions = this.getWSAAnsweredQuestions.bind(this);\r\n    this.getWSAHeader = this.getWSAHeader.bind(this);\r\n  }\r\n\r\n  getWSAAnsweredQuestions() {\r\n    let data = {\r\n      WSAId: this.props.location.state.WSAId\r\n    };\r\n    fetch(\"/get-completed-questions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ answeredQuestions: results.recordset });\r\n        console.log(this.state.answeredQuestions);\r\n      });\r\n  }\r\n\r\n  getWSAHeader() {\r\n    let data = {\r\n      WSAId: this.props.location.state.WSAId\r\n    };\r\n    fetch(\"/get-WSA-header\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ WSAHeader: results.recordset });\r\n        console.log(this.state.WSAHeader);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWSAHeader();\r\n    this.getWSAAnsweredQuestions();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        {/* <h3 style={{ textAlign: \"center\" }}>Workstation Assessment</h3> */}\r\n\r\n        <DisplayWSAHeader WSAHeader={this.state.WSAHeader} />\r\n        <WSAAnsweredQuestions\r\n          answeredQuestions={this.state.answeredQuestions}\r\n          amountOfQuestions={this.state.answeredQuestions.length}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div style={{ textAlign: \"right\" }}>\r\n        <ProfileButton />\r\n        <LogOutButton />\r\n        <AdminButton />\r\n      </div>\r\n\r\n      <div className=\"User-Menu\"></div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nclass WSAAnsweredQuestions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewMoreToken: false\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.answeredQuestions &&\r\n          this.props.answeredQuestions.map((question, index) => {\r\n            // alert(question.SuggestedSoloution);\r\n            return (\r\n              <ul>\r\n                <DisplayWSAAnsweredQuestions\r\n                  id={question.Id}\r\n                  questionWhenAnswered={question.QuestionWhenAnswered}\r\n                  questionResponse={question.QuestionResponse}\r\n                  suggestedSoloution={question.SuggestedSoloution}\r\n                  WSAId={question.WSAId}\r\n                  ResponseId={question.ResponseId}\r\n                  amountOfQuestions={this.props.amountOfQuestions}\r\n                />\r\n                <br />\r\n              </ul>\r\n            );\r\n          })}\r\n      </>\r\n    );\r\n  }\r\n}\r\nclass DisplayWSAHeader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.WSAHeader &&\r\n          this.props.WSAHeader.map(function(header, index) {\r\n            return (\r\n              <>\r\n                <ul style={{ paddingBottom: \"25px\" }}>\r\n                  <div style={{ backgroundColor: \"lightGrey\" }}>\r\n                    <h3\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        textDecoration: \"underline\"\r\n                      }}\r\n                    >\r\n                      Workstation Assessment\r\n                    </h3>\r\n                    <ul style={{}}>\r\n                      <b>User:</b>\r\n                      {header.NameOfUser}\r\n                    </ul>\r\n                    <ul>\r\n                      <b>Workstation :</b> {header.AssignedWorkstation}\r\n                    </ul>\r\n                    {/* <ul>\r\n                      <b>Date: </b>\r\n                      {moment(header.Date).format(\" DD/MM/YYYY \")}\r\n                    </ul> */}\r\n                    <ul>\r\n                      <b>Status :</b> {header.QuestionStatus}\r\n                    </ul>\r\n                    <ul>\r\n                      <b> Email: </b>\r\n                      {header.Email}\r\n                    </ul>\r\n                    <ul>\r\n                      <b> Contact Number: </b>\r\n                      {header.ContactNumber}\r\n                    </ul>\r\n                    <br />{\" \"}\r\n                  </div>\r\n                </ul>\r\n              </>\r\n            );\r\n          })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nclass DisplayWSAAnsweredQuestions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      viewFullDetailsToken: true,\r\n      noteToBeAdded: \"\",\r\n      WSAResponses: [],\r\n      ViewCompletedResponsesToken: false\r\n    };\r\n    this.submitNote = this.submitNote.bind(this);\r\n    this.viewDetails = this.viewDetails.bind(this);\r\n    // this.acceptSoloution = this.acceptSoloution.bind(this);\r\n  }\r\n  // acceptSoloution() {\r\n  //   //   var today = new Date(),\r\n  // //     date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n  // //       1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n\r\n  //   let data = {\r\n  //     responseId: this.props.ResponseId,\r\n  //     response: this.state.noteToBeAdded,\r\n  //     date: date,\r\n  //     seenStatus: 0\r\n  //   };\r\n\r\n  //   fetch(\"/submit-WSA-Response-Admin\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       Accept: \"application/json\",\r\n  //       \"Content-Type\": \"application/json\"\r\n  //     },\r\n  //     body: JSON.stringify(data)\r\n  //   });\r\n\r\n  //   window.location.reload();\r\n  //   alert(\"Response Added\");\r\n  // }\r\n\r\n  viewDetails() {\r\n    this.setState({ viewFullDetailsToken: false });\r\n  }\r\n\r\n  submitNote() {\r\n    if (this.state.noteToBeAdded.length > 5) {\r\n      // alert(this.props.ResponseId);\r\n      var today = new Date(),\r\n        date = `${today.getUTCFullYear()}-${today.getUTCMonth() +\r\n          1}-${today.getUTCDate()} ${today.getHours()}:${today.getMinutes()}:${today.getSeconds()}.${today.getMilliseconds()} `;\r\n      let email = window.localStorage.getItem(\"User\");\r\n\r\n      let data = {\r\n        responseId: this.props.ResponseId,\r\n        response: this.state.noteToBeAdded,\r\n        date: date,\r\n        seenStatus: 0,\r\n        email: email\r\n      };\r\n\r\n      fetch(\"/submit-WSA-Response-Admin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      });\r\n\r\n      window.location.reload();\r\n      alert(\"Response Added\");\r\n    } else if (!this.state.noteToBeAdded.length < 5) {\r\n      alert(\"A Response must consist of more than 5 characters\");\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    let responseId = this.props.ResponseId;\r\n\r\n    let data = {\r\n      responseId: responseId\r\n    };\r\n    fetch(\"/get-WSA-responses\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        this.setState({ WSAResponses: results.recordset });\r\n        console.log(this.state.WSAResponses);\r\n        // alert(this.state.WSAResponses);\r\n      });\r\n    this.setState({ viewFullDetailsToken: true });\r\n  }\r\n\r\n  render() {\r\n    // alert(this.props.ResponseId + \"2\");\r\n\r\n    if (\r\n      this.state.WSAResponses.length &&\r\n      this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"Y\" &&\r\n      !this.state.ViewCompletedResponsesToken\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#E6E6E6\",\r\n              paddingBottom: \"40px\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ float: \"right\" }}\r\n              onClick={e =>\r\n                this.setState({ ViewCompletedResponsesToken: true })\r\n              }\r\n            >\r\n              {\" \"}\r\n              View Responses{\" \"}\r\n            </button>\r\n            <ul>\r\n              {\" \"}\r\n              {this.props.questionWhenAnswered}\r\n              <div style={{ float: \"right\" }}>✔️</div>\r\n              <br />\r\n              <b>Answer :</b> Yes\r\n            </ul>{\" \"}\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      this.state.WSAResponses.length &&\r\n      this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"Y\" &&\r\n      this.state.ViewCompletedResponsesToken\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#E6E6E6\",\r\n              paddingBottom: \"40px\"\r\n            }}\r\n          >\r\n            {\" \"}\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              style={{ float: \"right\" }}\r\n              onClick={e =>\r\n                this.setState({ ViewCompletedResponsesToken: false })\r\n              }\r\n            >\r\n              {\" \"}\r\n              View Responses{\" \"}\r\n            </button>\r\n            <ul>\r\n              {\" \"}\r\n              {this.props.questionWhenAnswered}\r\n              <div style={{ float: \"right\" }}>✔️</div>\r\n              <br />\r\n              <b>Answer :</b> Yes{\" \"}\r\n              {this.state.WSAResponses &&\r\n                this.state.WSAResponses.map((r, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#E5E5E5\",\r\n                        border: \"inset\",\r\n                        background: \"white\"\r\n                      }}\r\n                    >\r\n                      <div style={{ float: \"right\" }}>\r\n                        {moment(r.Date).format(\"HH:MM  DD/MM/YYYY \")}\r\n                      </div>\r\n                      {r.Response}\r\n                    </div>\r\n                  );\r\n                })}{\" \"}\r\n            </ul>\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      !this.state.WSAResponses.length &&\r\n      this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"Y\" &&\r\n      !this.state.ViewCompletedResponsesToken\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#E6E6E6\",\r\n              paddingBottom: \"40px\"\r\n            }}\r\n          >\r\n            <ul>\r\n              {\" \"}\r\n              {this.props.questionWhenAnswered}\r\n              <div style={{ float: \"right\" }}>✔️</div>\r\n              <br />\r\n              <b>Answer :</b> Yes\r\n            </ul>{\" \"}\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"N\"\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#E6E6E6\",\r\n              padding: \"1px\"\r\n            }}\r\n          >\r\n            <ul>\r\n              {\" \"}\r\n              {this.props.questionWhenAnswered}\r\n              <div style={{ float: \"right\" }}>✔️</div>\r\n              <br />\r\n              <b> Answer :</b> No, but not a problem\r\n              {/* {this.props.questionWhenAnswered} <br /> */}\r\n              {/* <b> Suggested Soloution :</b> {this.props.suggestedSoloution} */}\r\n              {this.state.WSAResponses &&\r\n                this.state.WSAResponses.map((r, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#E5E5E5\",\r\n                        border: \"inset\"\r\n                      }}\r\n                    >\r\n                      <div style={{ float: \"right\" }}>\r\n                        {moment(r.Date).format(\"HH:MM  DD/MM/YYYY \")}\r\n                      </div>\r\n                      {r.Response}\r\n                    </div>\r\n                  );\r\n                })}\r\n            </ul>{\" \"}\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"P\"\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#BDBDBD\",\r\n              padding: \"1px\"\r\n            }}\r\n          >\r\n            <ul>\r\n              {this.props.questionWhenAnswered}\r\n              <div style={{ float: \"right\" }}>❌ </div> <br />\r\n              <b>Answer : </b> No, and it is a problem <br />\r\n              <b> Suggested Soloution :</b> {this.props.suggestedSoloution}\r\n              {this.state.WSAResponses &&\r\n                this.state.WSAResponses.map((r, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#E5E5E5\",\r\n                        border: \"inset\"\r\n                      }}\r\n                    >\r\n                      <div style={{ float: \"right\" }}>\r\n                        {moment(r.Date).format(\"HH:MM  DD/MM/YYYY \")}\r\n                      </div>\r\n                      {r.Response}\r\n                    </div>\r\n                  );\r\n                })}\r\n            </ul>\r\n            <button\r\n              style={{ width: \"10%\", textAlign: \"center\", float: \"right\" }}\r\n              className=\"btn btn-primary\"\r\n              onClick={this.viewDetails}\r\n            >\r\n              Add Response\r\n            </button>{\" \"}\r\n            <br />\r\n            <br />\r\n            <AcceptSolutionModal\r\n              responseId={this.props.ResponseId}\r\n              amountOfQuestions={this.props.amountOfQuestions}\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </>\r\n      );\r\n    } else if (\r\n      !this.state.viewFullDetailsToken &&\r\n      this.props.questionResponse === \"P\"\r\n    ) {\r\n      return (\r\n        <>\r\n          <div\r\n            style={{\r\n              backgroundColor: \"#BDBDBD\",\r\n              padding: \"1px\"\r\n            }}\r\n          >\r\n            <button\r\n              onClick={e => this.setState({ viewFullDetailsToken: true })}\r\n              style={{ float: \"right\" }}\r\n              className=\"btn btn-secondary\"\r\n            >\r\n              Go back\r\n            </button>\r\n            <ul>\r\n              {this.props.questionWhenAnswered}{\" \"}\r\n              <div style={{ float: \"right\" }}>❌ </div>\r\n              <br />\r\n              <b>Answer :</b> No, and it is a problem <br />\r\n              <b> Suggested Soloution :</b> {this.props.suggestedSoloution}\r\n              {this.state.WSAResponses &&\r\n                this.state.WSAResponses.map((r, index) => {\r\n                  return (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"#E5E5E5\",\r\n                        border: \"inset\"\r\n                      }}\r\n                    >\r\n                      <div style={{ float: \"right\" }}>\r\n                        {moment(r.Date).format(\"HH:MM  DD/MM/YYYY \")}\r\n                      </div>\r\n                      {r.Response}\r\n                    </div>\r\n                  );\r\n                })}\r\n            </ul>\r\n            <ul>\r\n              <br />\r\n\r\n              <textarea\r\n                style={{\r\n                  width: \"100%\",\r\n                  padding: \"10px\"\r\n                }}\r\n                onChange={e => this.setState({ noteToBeAdded: e.target.value })}\r\n              />\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"100%\" }}\r\n                onClick={this.submitNote}\r\n              >\r\n                {\" \"}\r\n                Submit Response\r\n              </button>\r\n            </ul>\r\n\r\n            <br />\r\n\r\n            <AcceptSolutionModal\r\n              responseId={this.props.ResponseId}\r\n              amountOfQuestions={this.props.amountOfQuestions}\r\n            />\r\n\r\n            <br />\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nclass AcceptSolutionModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleShow = this.handleShow.bind(this);\r\n\r\n    this.handleRefresh = this.handleRefresh.bind(this);\r\n    this.acceptSoloution = this.acceptSoloution.bind(this);\r\n\r\n    this.state = {\r\n      show: false\r\n    };\r\n  }\r\n\r\n  acceptSoloution() {\r\n    let data = {\r\n      responseId: this.props.responseId,\r\n      amountOfQuestions: this.props.amountOfQuestions\r\n    };\r\n    fetch(\"/update-response-to-confirmed\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify(data)\r\n    });\r\n    alert(\"Response Set to completed\");\r\n    this.handleClose();\r\n    window.location.reload();\r\n  }\r\n  handleClose() {\r\n    this.setState({\r\n      show: false\r\n    });\r\n  }\r\n\r\n  handleShow() {\r\n    this.setState({\r\n      show: true\r\n    });\r\n  }\r\n\r\n  handleRefresh() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    // alert(this.props.amountOfQuestions);\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"header-container\">\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          style={{ width: \"10%\", textAlign: \"center\", float: \"right\" }}\r\n          onClick={this.handleShow}\r\n        >\r\n          <ul> Accept </ul>Soloution\r\n        </button>\r\n\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton></Modal.Header>\r\n          <Modal.Body>\r\n            <h4>Are you sure you want to accept this soloution? </h4>\r\n            <br />\r\n            <button\r\n              onClick={this.acceptSoloution}\r\n              className=\"btn btn-primary\"\r\n              style={{ width: \"50%\" }}\r\n            >\r\n              Yes\r\n            </button>\r\n            <button\r\n              onClick={this.handleClose}\r\n              className=\"btn btn-primary\"\r\n              style={{ width: \"50%\" }}\r\n            >\r\n              No\r\n            </button>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./customers.css\";\r\n\r\nclass DisplayUsersHS extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.getItems()\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    fetch(\"/admin-view-users\")\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        console.log(results.recordset);\r\n        this.setState({ users: results.recordset });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <ul>\r\n        {this.state.users &&\r\n          this.state.users.map(function(user, index) {\r\n            if (user.severity === 1) {\r\n              return (\r\n                <div className=\"jumbotron\">\r\n                  <li> Severity: {user.severity}</li>\r\n                  <li> User Name:{user.name}</li>\r\n                  <li>User Email: {user.email}</li>\r\n                  <li>Description of Issue: {user.description}</li>\r\n                  <button>See Details</button>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUsersHS;\r\n","import React from \"react\";\r\nimport \"./customers.css\";\r\n\r\nclass DisplayUsersMS extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.getItems()\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    fetch(\"/admin-view-users\")\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        console.log(results.recordset);\r\n        this.setState({ users: results.recordset });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <ul>\r\n        {this.state.users &&\r\n          this.state.users.map(function(user, index) {\r\n            if (user.severity === 2) {\r\n              return (\r\n                <div className=\"jumbotron\">\r\n                  <li> Severity: {user.severity}</li>\r\n                  <li> User Name:{user.name}</li>\r\n                  <li>User Email: {user.email}</li>\r\n                  <li>Description of Issue: {user.description}</li>\r\n                  <button>See Details</button>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUsersMS;\r\n","import React from \"react\";\r\nimport \"./customers.css\";\r\n\r\nclass DisplayUsersCS extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.getItems()\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    fetch(\"/admin-view-users\")\r\n      .then(recordset => recordset.json())\r\n      .then(results => {\r\n        console.log(results.recordset);\r\n        this.setState({ users: results.recordset });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <ul>\r\n        {this.state.users &&\r\n          this.state.users.map(function(user, index) {\r\n            if (user.severity === 3) {\r\n              return (\r\n                <div className=\"jumbotron\">\r\n                  <li> Severity: {user.severity}</li>\r\n                  <li> User Name:{user.name}</li>\r\n                  <li>User Email: {user.email}</li>\r\n                  <li>Description of Issue: {user.description}</li>\r\n                  <button>See Details</button>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUsersCS;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport \"../bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport DisplayUsersCS from \"../Components/DisplayUsersCS\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SeveritySelector />\r\n\r\n      <DisplayUsersCS />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div class=\"jumbotron\">\r\n      <div className=\"User-Menu\">\r\n        <Link>User details </Link>\r\n      </div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <div class=\"btn-group\">\r\n        <Link to=\"/home\">\r\n          <button type=\"button\" class=\"btn btn-light\">\r\n            Home\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/admin-view-users\">\r\n          <button type=\"button\" class=\"btn btn-light\">\r\n            View Users(Admin)\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SeveritySelector() {\r\n  return (\r\n    <div className=\"Severity-Toolbar\">\r\n      <div\r\n        class=\"btn-toolbar\"\r\n        role=\"toolbar\"\r\n        aria-label=\"Toolbar with button groups\"\r\n      >\r\n        <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n          <Link to=\"/admin-view-users-severity-high\">\r\n            {\" \"}\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Severity High\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users-severity-medium\">\r\n            {\" \"}\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Severity Medium\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users-severity-completed\">\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Completed\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users\">\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              View All\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./customers.css\";\r\n\r\nclass DisplayUsers extends React.Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = { users: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      users: this.getItems()\r\n    });\r\n  }\r\n\r\n  getItems() {\r\n    try {\r\n      fetch(\"/admin-view-users\")\r\n        .then(recordset => recordset.json())\r\n        .then(results => {\r\n          console.log(results.recordset);\r\n          this.setState({ users: results.recordset });\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.users);\r\n    return (\r\n      <ul>\r\n        {this.state.users &&\r\n          this.state.users.map(function(user, index) {\r\n            return (\r\n              <div className=\"jumbotron\">\r\n                <li> Severity: {user.severity}</li>\r\n                <li> User Name:{user.name}</li>\r\n                <li>User Email: {user.email}</li>\r\n                <li>Description of Issue: {user.description}</li>\r\n                <button>See Details</button>\r\n              </div>\r\n            );\r\n          })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayUsers;\r\n","import React from \"react\";\r\nimport logo from \"../codestone logo.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../bootstrap.min.css\";\r\n\r\nimport \"../bootstrap.min.css\";\r\nimport \"../App.css\";\r\n\r\nimport DisplayUsers from \"../Components/DisplayUsers\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <SeveritySelector />\r\n      <DisplayUsers />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header() {\r\n  return (\r\n    <div class=\"jumbotron\">\r\n      <div className=\"User-Menu\">\r\n        <Link>User details </Link>\r\n      </div>\r\n      <img\r\n        className=\"profile-image\"\r\n        alt=\"icon\"\r\n        src={logo}\r\n        width=\"340\"\r\n        height=\"60\"\r\n      />\r\n      <Navigation />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <div>\r\n      <br />\r\n      <div class=\"btn-group\">\r\n        <Link to=\"/home\">\r\n          <button type=\"button\" class=\"btn btn-light\">\r\n            Home\r\n          </button>\r\n        </Link>\r\n        <Link to=\"/admin-view-users\">\r\n          <button type=\"button\" class=\"btn btn-light\">\r\n            View Users(Admin)\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SeveritySelector() {\r\n  const ButtonSeverity = 0;\r\n  return (\r\n    <div className=\"Severity-Toolbar\">\r\n      <div\r\n        class=\"btn-toolbar\"\r\n        role=\"toolbar\"\r\n        aria-label=\"Toolbar with button groups\"\r\n      >\r\n        <div class=\"btn-group mr-2\" role=\"group\" aria-label=\"First group\">\r\n          <Link to=\"/admin-view-users-severity-high\">\r\n            {\" \"}\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Severity High\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users-severity-medium\">\r\n            {\" \"}\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Severity Medium\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users-severity-completed\">\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              Completed\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/admin-view-users\">\r\n            <button type=\"button\" class=\"btn btn-secondary\">\r\n              View All\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n//basic   token checker.\r\nconst token = window.localStorage.getItem(\"myToken\");\r\nconst adminToken = window.localStorage.getItem(\"adminToken\");\r\n\r\nconst AuthRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      (token && token !== undefined) ||\r\n      (adminToken && adminToken !== undefined) ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport default AuthRoute;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./bootstrap.min.css\";\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LoginPage from \"./Components/Pages/LoginPage\";\r\nimport RegisterPage from \"./Components/Pages/RegisterPage\";\r\nimport ConfirmRegisterPage from \"./Components/Pages/ConfirmRegisterPage\";\r\nimport ResetPassword from \"./Components/Pages/ResetPasswordPage\";\r\nimport Home from \"./Components/Pages/HomePage\";\r\nimport UserQuestions from \"./Components/Pages/UserQuestionsPage\";\r\nimport ConfirmEmail from \"./Components/Pages/ConfirmEmail\";\r\nimport ConfirmPassword from \"./Components/Pages/ConfirmPasswordPage\";\r\nimport ProfilePage from \"./Components/Pages/ProfilePage\";\r\nimport DisplayWorkStationMangmentPage from \"./Components/Pages/DisplayWorkStationMangmentPage\";\r\nimport History from \"./Components/Pages/History\";\r\nimport AdminCenter from \"./Components/Pages/AdminCenter\";\r\nimport AdminCenterViewUsers from \"./Components/Pages/AdminCenterViewUsers\";\r\nimport AdminViewWorkStationAssessmentsPage from \"./Components/Pages/AdminViewWorkStationAssessmentsPage\";\r\nimport AdminViewWorkStationAssessmentsDeclinedPage from \"./Components/Pages/AdminViewWorkStationAssessmentsDeclinedPage\";\r\nimport CompletedAssessmentLandingPage from \"./Components/Pages/CompletedAssessmentLandingPage\";\r\nimport AdminViewFullUserWSAResponses from \"./Components/Pages/AdminViewFullUserWSAResponses\";\r\n////\r\nimport AdminViewUsersSeverityHigh from \"./AdminComponents/AdminViewUsersSeverityHigh\";\r\nimport AdminViewUsersSeverityMedium from \"./AdminComponents/AdminViewUsersSeverityMedium\";\r\nimport AdminViewUsersSeverityCompleted from \"./AdminComponents/AdminViewUsersSeverityCompleted\";\r\nimport AdminViewUsers from \"./AdminComponents/AdminViewUsers\";\r\n\r\nimport AuthRoute from \"./Routing/AuthRoute\";\r\n//import ResetAuthRoute from \"./Routing/AuthRoute\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Routing></Routing>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst adminToken = window.localStorage.getItem(\"adminToken\");\r\nconst AdminAuthRoute = ({ component: Component }) => (\r\n  <Route\r\n    render={props =>\r\n      adminToken && adminToken !== undefined ? (\r\n        <Component />\r\n      ) : (\r\n        <Redirect to=\"/home\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst resetToken = window.localStorage.getItem(\"resetToken\");\r\nconst ResetAuthRoute = ({ component: Component }) => (\r\n  <Route\r\n    render={props =>\r\n      resetToken && resetToken !== undefined ? (\r\n        <Component />\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nfunction Routing() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/reset\" component={ResetPassword} />\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        {/* <Route exact path=\"/Register\" component={RegisterPage} /> */}\r\n        <Route exact path=\"/confirm-email\" component={ConfirmEmail} />\r\n        <Route exact path=\"/register\" component={ConfirmRegisterPage} />\r\n        <ResetAuthRoute\r\n          exact\r\n          path=\"/confirm-Password\"\r\n          component={ConfirmPassword}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/admin-view-full-user-wsa-responses\"\r\n          component={AdminViewFullUserWSAResponses}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/completed-assessment\"\r\n          component={CompletedAssessmentLandingPage}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/admin-center-view-users\"\r\n          component={AdminCenterViewUsers}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/profile-display-work-stations\"\r\n          component={DisplayWorkStationMangmentPage}\r\n        />\r\n        <AdminAuthRoute exact path=\"/admin-center\" component={AdminCenter} />\r\n        <AuthRoute exact path=\"/profile\" component={ProfilePage} />\r\n        <AuthRoute exact path=\"/home\" component={Home} />\r\n        <AuthRoute exact path=\"/user-questions\" component={UserQuestions} />\r\n        <AuthRoute exact path=\"/user-history\" component={History} />\r\n        />\r\n        <AdminAuthRoute\r\n          exact\r\n          path=\"/admin-view-users\"\r\n          component={AdminViewUsers}\r\n        />\r\n        <AdminAuthRoute\r\n          exact\r\n          path=\"/admin-view-workstation-assessments\"\r\n          component={AdminViewWorkStationAssessmentsPage}\r\n        />\r\n        <AdminAuthRoute\r\n          exact\r\n          path=\"/admin-view-workstation-assessments-declined\"\r\n          component={AdminViewWorkStationAssessmentsDeclinedPage}\r\n        />\r\n        {/* <AuthRoute\r\n          exact\r\n          path=\"/admin-view-users-severity-high\"\r\n          component={AdminViewUsersSeverityHigh}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/admin-view-users-severity-medium\"\r\n          component={AdminViewUsersSeverityMedium}\r\n        />\r\n        <AuthRoute\r\n          exact\r\n          path=\"/admin-view-users-severity-completed\"\r\n          component={AdminViewUsersSeverityCompleted}\r\n        /> */}\r\n        <AuthRoute exact path=\"/admin-view-users\" component={AdminViewUsers} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/codestone logo.187518e5.png\";"],"sourceRoot":""}